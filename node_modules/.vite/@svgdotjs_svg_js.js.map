{
  "version": 3,
  "sources": ["../@svgdotjs/svg.js/src/utils/methods.js", "../@svgdotjs/svg.js/src/utils/utils.js", "../@svgdotjs/svg.js/src/modules/core/namespaces.js", "../@svgdotjs/svg.js/src/utils/window.js", "../@svgdotjs/svg.js/src/types/Base.js", "../@svgdotjs/svg.js/src/utils/adopter.js", "../@svgdotjs/svg.js/src/modules/optional/arrange.js", "../@svgdotjs/svg.js/src/modules/core/regex.js", "../@svgdotjs/svg.js/src/modules/optional/class.js", "../@svgdotjs/svg.js/src/modules/optional/css.js", "../@svgdotjs/svg.js/src/modules/optional/data.js", "../@svgdotjs/svg.js/src/modules/optional/memory.js", "../@svgdotjs/svg.js/src/modules/core/event.js", "../@svgdotjs/svg.js/src/types/Color.js", "../@svgdotjs/svg.js/src/types/Point.js", "../@svgdotjs/svg.js/src/types/Matrix.js", "../@svgdotjs/svg.js/src/modules/core/parser.js", "../@svgdotjs/svg.js/src/types/Box.js", "../@svgdotjs/svg.js/src/types/ArrayPolyfill.js", "../@svgdotjs/svg.js/src/types/List.js", "../@svgdotjs/svg.js/src/modules/core/selector.js", "../@svgdotjs/svg.js/src/types/EventTarget.js", "../@svgdotjs/svg.js/src/modules/core/defaults.js", "../@svgdotjs/svg.js/src/types/SVGArray.js", "../@svgdotjs/svg.js/src/types/SVGNumber.js", "../@svgdotjs/svg.js/src/modules/core/attr.js", "../@svgdotjs/svg.js/src/elements/Dom.js", "../@svgdotjs/svg.js/src/elements/Element.js", "../@svgdotjs/svg.js/src/modules/optional/sugar.js", "../@svgdotjs/svg.js/src/modules/optional/transform.js", "../@svgdotjs/svg.js/src/modules/core/circled.js", "../@svgdotjs/svg.js/src/elements/Shape.js", "../@svgdotjs/svg.js/src/elements/Circle.js", "../@svgdotjs/svg.js/src/elements/Container.js", "../@svgdotjs/svg.js/src/elements/Defs.js", "../@svgdotjs/svg.js/src/elements/Ellipse.js", "../@svgdotjs/svg.js/src/elements/Stop.js", "../@svgdotjs/svg.js/src/modules/core/gradiented.js", "../@svgdotjs/svg.js/src/elements/Gradient.js", "../@svgdotjs/svg.js/src/elements/Pattern.js", "../@svgdotjs/svg.js/src/elements/Image.js", "../@svgdotjs/svg.js/src/types/PointArray.js", "../@svgdotjs/svg.js/src/modules/core/pointed.js", "../@svgdotjs/svg.js/src/elements/Line.js", "../@svgdotjs/svg.js/src/elements/Marker.js", "../@svgdotjs/svg.js/src/animation/Controller.js", "../@svgdotjs/svg.js/src/types/PathArray.js", "../@svgdotjs/svg.js/src/animation/Morphable.js", "../@svgdotjs/svg.js/src/elements/Path.js", "../@svgdotjs/svg.js/src/modules/core/poly.js", "../@svgdotjs/svg.js/src/elements/Polygon.js", "../@svgdotjs/svg.js/src/elements/Polyline.js", "../@svgdotjs/svg.js/src/elements/Rect.js", "../@svgdotjs/svg.js/src/animation/Queue.js", "../@svgdotjs/svg.js/src/animation/Animator.js", "../@svgdotjs/svg.js/src/animation/Timeline.js", "../@svgdotjs/svg.js/src/animation/Runner.js", "../@svgdotjs/svg.js/src/elements/Svg.js", "../@svgdotjs/svg.js/src/elements/Symbol.js", "../@svgdotjs/svg.js/src/modules/core/textable.js", "../@svgdotjs/svg.js/src/elements/Text.js", "../@svgdotjs/svg.js/src/elements/Tspan.js", "../@svgdotjs/svg.js/src/elements/ClipPath.js", "../@svgdotjs/svg.js/src/elements/ForeignObject.js", "../@svgdotjs/svg.js/src/elements/G.js", "../@svgdotjs/svg.js/src/elements/A.js", "../@svgdotjs/svg.js/src/elements/Mask.js", "../@svgdotjs/svg.js/src/elements/Style.js", "../@svgdotjs/svg.js/src/elements/TextPath.js", "../@svgdotjs/svg.js/src/elements/Use.js", "../@svgdotjs/svg.js/src/main.js"],
  "sourcesContent": ["const methods = {}\r\nconst names = []\r\n\r\nexport function registerMethods (name, m) {\r\n  if (Array.isArray(name)) {\r\n    for (const _name of name) {\r\n      registerMethods(_name, m)\r\n    }\r\n    return\r\n  }\r\n\r\n  if (typeof name === 'object') {\r\n    for (const _name in name) {\r\n      registerMethods(_name, name[_name])\r\n    }\r\n    return\r\n  }\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(m))\r\n  methods[name] = Object.assign(methods[name] || {}, m)\r\n}\r\n\r\nexport function getMethodsFor (name) {\r\n  return methods[name] || {}\r\n}\r\n\r\nexport function getMethodNames () {\r\n  return [ ...new Set(names) ]\r\n}\r\n\r\nexport function addMethodNames (_names) {\r\n  names.push(..._names)\r\n}\r\n", "// Map function\r\nexport function map (array, block) {\r\n  var i\r\n  var il = array.length\r\n  var result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    result.push(block(array[i]))\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Filter function\r\nexport function filter (array, block) {\r\n  var i\r\n  var il = array.length\r\n  var result = []\r\n\r\n  for (i = 0; i < il; i++) {\r\n    if (block(array[i])) {\r\n      result.push(array[i])\r\n    }\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// Degrees to radians\r\nexport function radians (d) {\r\n  return d % 360 * Math.PI / 180\r\n}\r\n\r\n// Radians to degrees\r\nexport function degrees (r) {\r\n  return r * 180 / Math.PI % 360\r\n}\r\n\r\n// Convert dash-separated-string to camelCase\r\nexport function camelCase (s) {\r\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\r\n    return g.toUpperCase()\r\n  })\r\n}\r\n\r\n// Convert camel cased string to string seperated\r\nexport function unCamelCase (s) {\r\n  return s.replace(/([A-Z])/g, function (m, g) {\r\n    return '-' + g.toLowerCase()\r\n  })\r\n}\r\n\r\n// Capitalize first letter of a string\r\nexport function capitalize (s) {\r\n  return s.charAt(0).toUpperCase() + s.slice(1)\r\n}\r\n\r\n// Calculate proportional width and height values when necessary\r\nexport function proportionalSize (element, width, height, box) {\r\n  if (width == null || height == null) {\r\n    box = box || element.bbox()\r\n\r\n    if (width == null) {\r\n      width = box.width / box.height * height\r\n    } else if (height == null) {\r\n      height = box.height / box.width * width\r\n    }\r\n  }\r\n\r\n  return {\r\n    width: width,\r\n    height: height\r\n  }\r\n}\r\n\r\nexport function getOrigin (o, element) {\r\n  // Allow origin or around as the names\r\n  const origin = o.origin // o.around == null ? o.origin : o.around\r\n  let ox, oy\r\n\r\n  // Allow the user to pass a string to rotate around a given point\r\n  if (typeof origin === 'string' || origin == null) {\r\n    // Get the bounding box of the element with no transformations applied\r\n    const string = (origin || 'center').toLowerCase().trim()\r\n    const { height, width, x, y } = element.bbox()\r\n\r\n    // Calculate the transformed x and y coordinates\r\n    const bx = string.includes('left') ? x\r\n      : string.includes('right') ? x + width\r\n      : x + width / 2\r\n    const by = string.includes('top') ? y\r\n      : string.includes('bottom') ? y + height\r\n      : y + height / 2\r\n\r\n    // Set the bounds eg : \"bottom-left\", \"Top right\", \"middle\" etc...\r\n    ox = o.ox != null ? o.ox : bx\r\n    oy = o.oy != null ? o.oy : by\r\n  } else {\r\n    ox = origin[0]\r\n    oy = origin[1]\r\n  }\r\n\r\n  // Return the origin as it is if it wasn't a string\r\n  return [ ox, oy ]\r\n}\r\n", "// Default namespaces\r\nexport const ns = 'http://www.w3.org/2000/svg'\r\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\r\nexport const xlink = 'http://www.w3.org/1999/xlink'\r\nexport const svgjs = 'http://svgjs.com/svgjs'\r\n", "export const globals = {\r\n  window: typeof window === 'undefined' ? null : window,\r\n  document: typeof document === 'undefined' ? null : document\r\n}\r\n\r\nexport function registerWindow (win = null, doc = null) {\r\n  globals.window = win\r\n  globals.document = doc\r\n}\r\n\r\nconst save = {}\r\n\r\nexport function saveWindow () {\r\n  save.window = globals.window\r\n  save.document = globals.document\r\n}\r\n\r\nexport function restoreWindow () {\r\n  globals.window = save.window\r\n  globals.document = save.document\r\n}\r\n\r\nexport function withWindow (win, fn) {\r\n  saveWindow()\r\n  registerWindow(win, win.document)\r\n  fn(win, win.document)\r\n  restoreWindow()\r\n}\r\n\r\nexport function getWindow () {\r\n  return globals.window\r\n}\r\n", "export default class Base {\r\n  // constructor (node/*, {extensions = []} */) {\r\n  //   // this.tags = []\r\n  //   //\r\n  //   // for (let extension of extensions) {\r\n  //   //   extension.setup.call(this, node)\r\n  //   //   this.tags.push(extension.name)\r\n  //   // }\r\n  // }\r\n}\r\n", "import { addMethodNames } from './methods.js'\r\nimport { capitalize } from './utils.js'\r\nimport { ns } from '../modules/core/namespaces.js'\r\nimport { globals } from '../utils/window.js'\r\nimport Base from '../types/Base.js'\r\n\r\nconst elements = {}\r\nexport const root = '___SYMBOL___ROOT___'\r\n\r\n// Method for element creation\r\nexport function create (name) {\r\n  // create element\r\n  return globals.document.createElementNS(ns, name)\r\n}\r\n\r\nexport function makeInstance (element) {\r\n  if (element instanceof Base) return element\r\n\r\n  if (typeof element === 'object') {\r\n    return adopter(element)\r\n  }\r\n\r\n  if (element == null) {\r\n    return new elements[root]()\r\n  }\r\n\r\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\r\n    return adopter(globals.document.querySelector(element))\r\n  }\r\n\r\n  var node = create('svg')\r\n  node.innerHTML = element\r\n\r\n  // We can use firstChild here because we know,\r\n  // that the first char is < and thus an element\r\n  element = adopter(node.firstChild)\r\n\r\n  return element\r\n}\r\n\r\nexport function nodeOrNew (name, node) {\r\n  return node instanceof globals.window.Node ? node : create(name)\r\n}\r\n\r\n// Adopt existing svg elements\r\nexport function adopt (node) {\r\n  // check for presence of node\r\n  if (!node) return null\r\n\r\n  // make sure a node isn't already adopted\r\n  if (node.instance instanceof Base) return node.instance\r\n\r\n  // initialize variables\r\n  var className = capitalize(node.nodeName || 'Dom')\r\n\r\n  // Make sure that gradients are adopted correctly\r\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\r\n    className = 'Gradient'\r\n\r\n  // Fallback to Dom if element is not known\r\n  } else if (!elements[className]) {\r\n    className = 'Dom'\r\n  }\r\n\r\n  return new elements[className](node)\r\n}\r\n\r\nlet adopter = adopt\r\n\r\nexport function mockAdopt (mock = adopt) {\r\n  adopter = mock\r\n}\r\n\r\nexport function register (element, name = element.name, asRoot = false) {\r\n  elements[name] = element\r\n  if (asRoot) elements[root] = element\r\n\r\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\r\n\r\n  return element\r\n}\r\n\r\nexport function getClass (name) {\r\n  return elements[name]\r\n}\r\n\r\n// Element id sequence\r\nlet did = 1000\r\n\r\n// Get next named element id\r\nexport function eid (name) {\r\n  return 'Svgjs' + capitalize(name) + (did++)\r\n}\r\n\r\n// Deep new id assignment\r\nexport function assignNewId (node) {\r\n  // do the same for SVG child nodes as well\r\n  for (var i = node.children.length - 1; i >= 0; i--) {\r\n    assignNewId(node.children[i])\r\n  }\r\n\r\n  if (node.id) {\r\n    return adopt(node).id(eid(node.nodeName))\r\n  }\r\n\r\n  return adopt(node)\r\n}\r\n\r\n// Method for extending objects\r\nexport function extend (modules, methods, attrCheck) {\r\n  var key, i\r\n\r\n  modules = Array.isArray(modules) ? modules : [ modules ]\r\n\r\n  for (i = modules.length - 1; i >= 0; i--) {\r\n    for (key in methods) {\r\n      let method = methods[key]\r\n      if (attrCheck) {\r\n        method = wrapWithAttrCheck(methods[key])\r\n      }\r\n      modules[i].prototype[key] = method\r\n    }\r\n  }\r\n}\r\n\r\n// export function extendWithAttrCheck (...args) {\r\n//   extend(...args, true)\r\n// }\r\n\r\nexport function wrapWithAttrCheck (fn) {\r\n  return function (...args) {\r\n    const o = args[args.length - 1]\r\n\r\n    if (o && o.constructor === Object && !(o instanceof Array)) {\r\n      return fn.apply(this, args.slice(0, -1)).attr(o)\r\n    } else {\r\n      return fn.apply(this, args)\r\n    }\r\n  }\r\n}\r\n\r\nexport function invent (config) {\r\n  // Create element initializer\r\n  var initializer = typeof config.create === 'function'\r\n    ? config.create\r\n    : function (node) {\r\n      this.constructor(node || create(config.create))\r\n    }\r\n\r\n  // Inherit prototype\r\n  if (config.inherit) {\r\n    /* eslint new-cap: off */\r\n    initializer.prototype = new config.inherit()\r\n    initializer.prototype.constructor = initializer\r\n  }\r\n\r\n  // Extend with methods\r\n  if (config.extend) { extend(initializer, config.extend) }\r\n\r\n  // Attach construct method to parent\r\n  if (config.construct) { extend(config.parent || elements.Container, config.construct) }\r\n\r\n  return initializer\r\n}\r\n", "import { makeInstance } from '../../utils/adopter.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Get all siblings, including myself\r\nexport function siblings () {\r\n  return this.parent().children()\r\n}\r\n\r\n// Get the curent position siblings\r\nexport function position () {\r\n  return this.parent().index(this)\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function next () {\r\n  return this.siblings()[this.position() + 1]\r\n}\r\n\r\n// Get the next element (will return null if there is none)\r\nexport function prev () {\r\n  return this.siblings()[this.position() - 1]\r\n}\r\n\r\n// Send given element one step forward\r\nexport function forward () {\r\n  var i = this.position() + 1\r\n  var p = this.parent()\r\n\r\n  // move node one step forward\r\n  p.removeElement(this).add(this, i)\r\n\r\n  // make sure defs node is always at the top\r\n  if (typeof p.isRoot === 'function' && p.isRoot()) {\r\n    p.node.appendChild(p.defs().node)\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Send given element one step backward\r\nexport function backward () {\r\n  var i = this.position()\r\n\r\n  if (i > 0) {\r\n    this.parent().removeElement(this).add(this, i - 1)\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the front\r\nexport function front () {\r\n  var p = this.parent()\r\n\r\n  // Move node forward\r\n  p.node.appendChild(this.node)\r\n\r\n  // Make sure defs node is always at the top\r\n  if (typeof p.isRoot === 'function' && p.isRoot()) {\r\n    p.node.appendChild(p.defs().node)\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Send given element all the way to the back\r\nexport function back () {\r\n  if (this.position() > 0) {\r\n    this.parent().removeElement(this).add(this, 0)\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element before the targeted element\r\nexport function before (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  var i = this.position()\r\n\r\n  this.parent().add(element, i)\r\n\r\n  return this\r\n}\r\n\r\n// Inserts a given element after the targeted element\r\nexport function after (element) {\r\n  element = makeInstance(element)\r\n  element.remove()\r\n\r\n  var i = this.position()\r\n\r\n  this.parent().add(element, i + 1)\r\n\r\n  return this\r\n}\r\n\r\nexport function insertBefore (element) {\r\n  element = makeInstance(element)\r\n  element.before(this)\r\n  return this\r\n}\r\n\r\nexport function insertAfter (element) {\r\n  element = makeInstance(element)\r\n  element.after(this)\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  siblings,\r\n  position,\r\n  next,\r\n  prev,\r\n  forward,\r\n  backward,\r\n  front,\r\n  back,\r\n  before,\r\n  after,\r\n  insertBefore,\r\n  insertAfter\r\n})\r\n", "// Parse unit value\r\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\r\n\r\n// Parse hex value\r\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\r\n\r\n// Parse rgb value\r\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\r\n\r\n// Parse reference id\r\nexport const reference = /(#[a-z0-9\\-_]+)/i\r\n\r\n// splits a transformation chain\r\nexport const transforms = /\\)\\s*,?\\s*/\r\n\r\n// Whitespace\r\nexport const whitespace = /\\s/g\r\n\r\n// Test hex value\r\nexport const isHex = /^#[a-f0-9]{3,6}$/i\r\n\r\n// Test rgb value\r\nexport const isRgb = /^rgb\\(/\r\n\r\n// Test css declaration\r\nexport const isCss = /[^:]+:[^;]+;?/\r\n\r\n// Test for blank string\r\nexport const isBlank = /^(\\s+)?$/\r\n\r\n// Test for numeric string\r\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\r\n\r\n// Test for percent value\r\nexport const isPercent = /^-?[\\d.]+%$/\r\n\r\n// Test for image url\r\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\r\n\r\n// split at whitespace and comma\r\nexport const delimiter = /[\\s,]+/\r\n\r\n// The following regex are used to parse the d attribute of a path\r\n\r\n// Matches all hyphens which are not after an exponent\r\nexport const hyphen = /([^e])-/gi\r\n\r\n// Replaces and tests for all path letters\r\nexport const pathLetters = /[MLHVCSQTAZ]/gi\r\n\r\n// yes we need this one, too\r\nexport const isPathLetter = /[MLHVCSQTAZ]/i\r\n\r\n// matches 0.154.23.45\r\nexport const numbersWithDots = /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\r\n\r\n// matches .\r\nexport const dots = /\\./g\r\n", "import { delimiter } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Return array of classes on the node\r\nexport function classes () {\r\n  var attr = this.attr('class')\r\n  return attr == null ? [] : attr.trim().split(delimiter)\r\n}\r\n\r\n// Return true if class exists on the node, false otherwise\r\nexport function hasClass (name) {\r\n  return this.classes().indexOf(name) !== -1\r\n}\r\n\r\n// Add class to the node\r\nexport function addClass (name) {\r\n  if (!this.hasClass(name)) {\r\n    var array = this.classes()\r\n    array.push(name)\r\n    this.attr('class', array.join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Remove class from the node\r\nexport function removeClass (name) {\r\n  if (this.hasClass(name)) {\r\n    this.attr('class', this.classes().filter(function (c) {\r\n      return c !== name\r\n    }).join(' '))\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Toggle the presence of a class on the node\r\nexport function toggleClass (name) {\r\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  classes, hasClass, addClass, removeClass, toggleClass\r\n})\r\n", "import { camelCase } from '../../utils/utils.js'\r\nimport { isBlank } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\n\r\n// Dynamic style generator\r\nexport function css (style, val) {\r\n  const ret = {}\r\n  if (arguments.length === 0) {\r\n    // get full style as object\r\n    this.node.style.cssText.split(/\\s*;\\s*/)\r\n      .filter(function (el) {\r\n        return !!el.length\r\n      })\r\n      .forEach(function (el) {\r\n        const t = el.split(/\\s*:\\s*/)\r\n        ret[t[0]] = t[1]\r\n      })\r\n    return ret\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    // get style properties in the array\r\n    if (Array.isArray(style)) {\r\n      for (const name of style) {\r\n        const cased = camelCase(name)\r\n        ret[cased] = this.node.style[cased]\r\n      }\r\n      return ret\r\n    }\r\n\r\n    // get style for property\r\n    if (typeof style === 'string') {\r\n      return this.node.style[camelCase(style)]\r\n    }\r\n\r\n    // set styles in object\r\n    if (typeof style === 'object') {\r\n      for (const name in style) {\r\n        // set empty string if null/undefined/'' was given\r\n        this.node.style[camelCase(name)]\r\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  // set style for property\r\n  if (arguments.length === 2) {\r\n    this.node.style[camelCase(style)]\r\n      = (val == null || isBlank.test(val)) ? '' : val\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Show element\r\nexport function show () {\r\n  return this.css('display', '')\r\n}\r\n\r\n// Hide element\r\nexport function hide () {\r\n  return this.css('display', 'none')\r\n}\r\n\r\n// Is element visible?\r\nexport function visible () {\r\n  return this.css('display') !== 'none'\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  css, show, hide, visible\r\n})\r\n", "import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Store data values on svg nodes\r\nexport function data (a, v, r) {\r\n  if (typeof a === 'object') {\r\n    for (v in a) {\r\n      this.data(v, a[v])\r\n    }\r\n  } else if (arguments.length < 2) {\r\n    try {\r\n      return JSON.parse(this.attr('data-' + a))\r\n    } catch (e) {\r\n      return this.attr('data-' + a)\r\n    }\r\n  } else {\r\n    this.attr('data-' + a,\r\n      v === null ? null\r\n      : r === true || typeof v === 'string' || typeof v === 'number' ? v\r\n      : JSON.stringify(v)\r\n    )\r\n  }\r\n\r\n  return this\r\n}\r\n\r\nregisterMethods('Dom', { data })\r\n", "import { registerMethods } from '../../utils/methods.js'\r\n\r\n// Remember arbitrary data\r\nexport function remember (k, v) {\r\n  // remember every item in an object individually\r\n  if (typeof arguments[0] === 'object') {\r\n    for (var key in k) {\r\n      this.remember(key, k[key])\r\n    }\r\n  } else if (arguments.length === 1) {\r\n    // retrieve memory\r\n    return this.memory()[k]\r\n  } else {\r\n    // store memory\r\n    this.memory()[k] = v\r\n  }\r\n\r\n  return this\r\n}\r\n\r\n// Erase a given memory\r\nexport function forget () {\r\n  if (arguments.length === 0) {\r\n    this._memory = {}\r\n  } else {\r\n    for (var i = arguments.length - 1; i >= 0; i--) {\r\n      delete this.memory()[arguments[i]]\r\n    }\r\n  }\r\n  return this\r\n}\r\n\r\n// This triggers creation of a new hidden class which is not performant\r\n// However, this function is not rarely used so it will not happen frequently\r\n// Return local memory object\r\nexport function memory () {\r\n  return (this._memory = this._memory || {})\r\n}\r\n\r\nregisterMethods('Dom', { remember, forget, memory })\r\n", "import { delimiter } from './regex.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\n\r\nlet listenerId = 0\r\nconst windowEvents = {}\r\n\r\nfunction getEvents (instance) {\r\n  let n = instance.getEventHolder()\r\n\r\n  // We dont want to save events in global space\r\n  if (n === globals.window) n = windowEvents\r\n  if (!n.events) n.events = {}\r\n  return n.events\r\n}\r\n\r\nfunction getEventTarget (instance) {\r\n  return instance.getEventTarget()\r\n}\r\n\r\nfunction clearEvents (instance) {\r\n  const n = instance.getEventHolder()\r\n  if (n.events) n.events = {}\r\n}\r\n\r\n// Add event binder in the SVG namespace\r\nexport function on (node, events, listener, binding, options) {\r\n  var l = listener.bind(binding || node)\r\n  var instance = makeInstance(node)\r\n  var bag = getEvents(instance)\r\n  var n = getEventTarget(instance)\r\n\r\n  // events can be an array of events or a string of events\r\n  events = Array.isArray(events) ? events : events.split(delimiter)\r\n\r\n  // add id to listener\r\n  if (!listener._svgjsListenerId) {\r\n    listener._svgjsListenerId = ++listenerId\r\n  }\r\n\r\n  events.forEach(function (event) {\r\n    var ev = event.split('.')[0]\r\n    var ns = event.split('.')[1] || '*'\r\n\r\n    // ensure valid object\r\n    bag[ev] = bag[ev] || {}\r\n    bag[ev][ns] = bag[ev][ns] || {}\r\n\r\n    // reference listener\r\n    bag[ev][ns][listener._svgjsListenerId] = l\r\n\r\n    // add listener\r\n    n.addEventListener(ev, l, options || false)\r\n  })\r\n}\r\n\r\n// Add event unbinder in the SVG namespace\r\nexport function off (node, events, listener, options) {\r\n  var instance = makeInstance(node)\r\n  var bag = getEvents(instance)\r\n  var n = getEventTarget(instance)\r\n\r\n  // listener can be a function or a number\r\n  if (typeof listener === 'function') {\r\n    listener = listener._svgjsListenerId\r\n    if (!listener) return\r\n  }\r\n\r\n  // events can be an array of events or a string or undefined\r\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\r\n\r\n  events.forEach(function (event) {\r\n    var ev = event && event.split('.')[0]\r\n    var ns = event && event.split('.')[1]\r\n    var namespace, l\r\n\r\n    if (listener) {\r\n      // remove listener reference\r\n      if (bag[ev] && bag[ev][ns || '*']) {\r\n        // removeListener\r\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\r\n\r\n        delete bag[ev][ns || '*'][listener]\r\n      }\r\n    } else if (ev && ns) {\r\n      // remove all listeners for a namespaced event\r\n      if (bag[ev] && bag[ev][ns]) {\r\n        for (l in bag[ev][ns]) {\r\n          off(n, [ ev, ns ].join('.'), l)\r\n        }\r\n\r\n        delete bag[ev][ns]\r\n      }\r\n    } else if (ns) {\r\n      // remove all listeners for a specific namespace\r\n      for (event in bag) {\r\n        for (namespace in bag[event]) {\r\n          if (ns === namespace) {\r\n            off(n, [ event, ns ].join('.'))\r\n          }\r\n        }\r\n      }\r\n    } else if (ev) {\r\n      // remove all listeners for the event\r\n      if (bag[ev]) {\r\n        for (namespace in bag[ev]) {\r\n          off(n, [ ev, namespace ].join('.'))\r\n        }\r\n\r\n        delete bag[ev]\r\n      }\r\n    } else {\r\n      // remove all listeners on a given node\r\n      for (event in bag) {\r\n        off(n, event)\r\n      }\r\n\r\n      clearEvents(instance)\r\n    }\r\n  })\r\n}\r\n\r\nexport function dispatch (node, event, data) {\r\n  var n = getEventTarget(node)\r\n\r\n  // Dispatch event\r\n  if (event instanceof globals.window.Event) {\r\n    n.dispatchEvent(event)\r\n  } else {\r\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true })\r\n    n.dispatchEvent(event)\r\n  }\r\n  return event\r\n}\r\n", "\r\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\r\n\r\nfunction sixDigitHex (hex) {\r\n  return hex.length === 4\r\n    ? [ '#',\r\n      hex.substring(1, 2), hex.substring(1, 2),\r\n      hex.substring(2, 3), hex.substring(2, 3),\r\n      hex.substring(3, 4), hex.substring(3, 4)\r\n    ].join('')\r\n    : hex\r\n}\r\n\r\nfunction componentHex (component) {\r\n  const integer = Math.round(component)\r\n  const bounded = Math.max(0, Math.min(255, integer))\r\n  const hex = bounded.toString(16)\r\n  return hex.length === 1 ? '0' + hex : hex\r\n}\r\n\r\nfunction is (object, space) {\r\n  for (let i = space.length; i--;) {\r\n    if (object[space[i]] == null) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction getParameters (a, b) {\r\n  const params = is(a, 'rgb') ? { _a: a.r, _b: a.g, _c: a.b, space: 'rgb' }\r\n    : is(a, 'xyz') ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\r\n    : is(a, 'hsl') ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\r\n    : is(a, 'lab') ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\r\n    : is(a, 'lch') ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\r\n    : is(a, 'cmyk') ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\r\n    : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\r\n\r\n  params.space = b || params.space\r\n  return params\r\n}\r\n\r\nfunction cieSpace (space) {\r\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hueToRgb (p, q, t) {\r\n  if (t < 0) t += 1\r\n  if (t > 1) t -= 1\r\n  if (t < 1 / 6) return p + (q - p) * 6 * t\r\n  if (t < 1 / 2) return q\r\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\r\n  return p\r\n}\r\n\r\nexport default class Color {\r\n  constructor (...inputs) {\r\n    this.init(...inputs)\r\n  }\r\n\r\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\r\n    // This catches the case when a falsy value is passed like ''\r\n    a = !a ? 0 : a\r\n\r\n    // Reset all values in case the init function is rerun with new color space\r\n    if (this.space) {\r\n      for (const component in this.space) {\r\n        delete this[this.space[component]]\r\n      }\r\n    }\r\n\r\n    if (typeof a === 'number') {\r\n      // Allow for the case that we don't need d...\r\n      space = typeof d === 'string' ? d : space\r\n      d = typeof d === 'string' ? 0 : d\r\n\r\n      // Assign the values straight to the color\r\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\r\n    // If the user gave us an array, make the color from it\r\n    } else if (a instanceof Array) {\r\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\r\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\r\n    } else if (a instanceof Object) {\r\n      // Set the object up and assign its values directly\r\n      const values = getParameters(a, b)\r\n      Object.assign(this, values)\r\n    } else if (typeof a === 'string') {\r\n      if (isRgb.test(a)) {\r\n        const noWhitespace = a.replace(whitespace, '')\r\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\r\n          .slice(1, 4).map(v => parseInt(v))\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else if (isHex.test(a)) {\r\n        const hexParse = v => parseInt(v, 16)\r\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\r\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\r\n      } else throw Error('Unsupported string format, can\\'t construct Color')\r\n    }\r\n\r\n    // Now add the components as a convenience\r\n    const { _a, _b, _c, _d } = this\r\n    const components = this.space === 'rgb' ? { r: _a, g: _b, b: _c }\r\n      : this.space === 'xyz' ? { x: _a, y: _b, z: _c }\r\n      : this.space === 'hsl' ? { h: _a, s: _b, l: _c }\r\n      : this.space === 'lab' ? { l: _a, a: _b, b: _c }\r\n      : this.space === 'lch' ? { l: _a, c: _b, h: _c }\r\n      : this.space === 'cmyk' ? { c: _a, m: _b, y: _c, k: _d }\r\n      : {}\r\n    Object.assign(this, components)\r\n  }\r\n\r\n  /*\r\n  Conversion Methods\r\n  */\r\n\r\n  rgb () {\r\n    if (this.space === 'rgb') {\r\n      return this\r\n    } else if (cieSpace(this.space)) {\r\n      // Convert to the xyz color space\r\n      let { x, y, z } = this\r\n      if (this.space === 'lab' || this.space === 'lch') {\r\n        // Get the values in the lab space\r\n        let { l, a, b } = this\r\n        if (this.space === 'lch') {\r\n          const { c, h } = this\r\n          const dToR = Math.PI / 180\r\n          a = c * Math.cos(dToR * h)\r\n          b = c * Math.sin(dToR * h)\r\n        }\r\n\r\n        // Undo the nonlinear function\r\n        const yL = (l + 16) / 116\r\n        const xL = a / 500 + yL\r\n        const zL = yL - b / 200\r\n\r\n        // Get the xyz values\r\n        const ct = 16 / 116\r\n        const mx = 0.008856\r\n        const nm = 7.787\r\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\r\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\r\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\r\n      }\r\n\r\n      // Convert xyz to unbounded rgb values\r\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\r\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\r\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\r\n\r\n      // Convert the values to true rgb values\r\n      const pow = Math.pow\r\n      const bd = 0.0031308\r\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\r\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\r\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\r\n\r\n      // Make and return the color\r\n      const color = new Color(255 * r, 255 * g, 255 * b)\r\n      return color\r\n    } else if (this.space === 'hsl') {\r\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\r\n      // Get the current hsl values\r\n      let { h, s, l } = this\r\n      h /= 360\r\n      s /= 100\r\n      l /= 100\r\n\r\n      // If we are grey, then just make the color directly\r\n      if (s === 0) {\r\n        l *= 255\r\n        const color = new Color(l, l, l)\r\n        return color\r\n      }\r\n\r\n      // TODO I have no idea what this does :D If you figure it out, tell me!\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\r\n      const p = 2 * l - q\r\n\r\n      // Get the rgb values\r\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\r\n      const g = 255 * hueToRgb(p, q, h)\r\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\r\n\r\n      // Make a new color\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else if (this.space === 'cmyk') {\r\n      // https://gist.github.com/felipesabino/5066336\r\n      // Get the normalised cmyk values\r\n      const { c, m, y, k } = this\r\n\r\n      // Get the rgb values\r\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\r\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\r\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\r\n\r\n      // Form the color and return it\r\n      const color = new Color(r, g, b)\r\n      return color\r\n    } else {\r\n      return this\r\n    }\r\n  }\r\n\r\n  lab () {\r\n    // Get the xyz color\r\n    const { x, y, z } = this.xyz()\r\n\r\n    // Get the lab components\r\n    const l = (116 * y) - 16\r\n    const a = 500 * (x - y)\r\n    const b = 200 * (y - z)\r\n\r\n    // Construct and return a new color\r\n    const color = new Color(l, a, b, 'lab')\r\n    return color\r\n  }\r\n\r\n  xyz () {\r\n\r\n    // Normalise the red, green and blue values\r\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\r\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\r\n\r\n    // Convert to the lab rgb space\r\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\r\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\r\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\r\n\r\n    // Convert to the xyz color space without bounding the values\r\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\r\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\r\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\r\n\r\n    // Get the proper xyz values by applying the bounding\r\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\r\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\r\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\r\n\r\n    // Make and return the color\r\n    const color = new Color(x, y, z, 'xyz')\r\n    return color\r\n  }\r\n\r\n  lch () {\r\n\r\n    // Get the lab color directly\r\n    const { l, a, b } = this.lab()\r\n\r\n    // Get the chromaticity and the hue using polar coordinates\r\n    const c = Math.sqrt(a ** 2 + b ** 2)\r\n    let h = 180 * Math.atan2(b, a) / Math.PI\r\n    if (h < 0) {\r\n      h *= -1\r\n      h = 360 - h\r\n    }\r\n\r\n    // Make a new color and return it\r\n    const color = new Color(l, c, h, 'lch')\r\n    return color\r\n  }\r\n\r\n  hsl () {\r\n\r\n    // Get the rgb values\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Find the maximum and minimum values to get the lightness\r\n    const max = Math.max(r, g, b)\r\n    const min = Math.min(r, g, b)\r\n    const l = (max + min) / 2\r\n\r\n    // If the r, g, v values are identical then we are grey\r\n    const isGrey = max === min\r\n\r\n    // Calculate the hue and saturation\r\n    const delta = max - min\r\n    const s = isGrey ? 0\r\n      : l > 0.5 ? delta / (2 - max - min)\r\n      : delta / (max + min)\r\n    const h = isGrey ? 0\r\n      : max === r ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\r\n      : max === g ? ((b - r) / delta + 2) / 6\r\n      : max === b ? ((r - g) / delta + 4) / 6\r\n      : 0\r\n\r\n    // Construct and return the new color\r\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\r\n    return color\r\n  }\r\n\r\n  cmyk () {\r\n\r\n    // Get the rgb values for the current color\r\n    const { _a, _b, _c } = this.rgb()\r\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\r\n\r\n    // Get the cmyk values in an unbounded format\r\n    const k = Math.min(1 - r, 1 - g, 1 - b)\r\n\r\n    if (k === 1) {\r\n      // Catch the black case\r\n      return new Color(0, 0, 0, 1, 'cmyk')\r\n    }\r\n\r\n    const c = (1 - r - k) / (1 - k)\r\n    const m = (1 - g - k) / (1 - k)\r\n    const y = (1 - b - k) / (1 - k)\r\n\r\n    // Construct the new color\r\n    const color = new Color(c, m, y, k, 'cmyk')\r\n    return color\r\n  }\r\n\r\n  /*\r\n  Input and Output methods\r\n  */\r\n\r\n  _clamped () {\r\n    const { _a, _b, _c } = this.rgb()\r\n    const { max, min, round } = Math\r\n    const format = v => max(0, min(round(v), 255))\r\n    return [ _a, _b, _c ].map(format)\r\n  }\r\n\r\n  toHex () {\r\n    const [ r, g, b ] = this._clamped().map(componentHex)\r\n    return `#${r}${g}${b}`\r\n  }\r\n\r\n  toString () {\r\n    return this.toHex()\r\n  }\r\n\r\n  toRgb () {\r\n    const [ rV, gV, bV ] = this._clamped()\r\n    const string = `rgb(${rV},${gV},${bV})`\r\n    return string\r\n  }\r\n\r\n  toArray () {\r\n    const { _a, _b, _c, _d, space } = this\r\n    return [ _a, _b, _c, _d, space ]\r\n  }\r\n\r\n  /*\r\n  Generating random colors\r\n  */\r\n\r\n  static random (mode = 'vibrant', t, u) {\r\n\r\n    // Get the math modules\r\n    const { random, round, sin, PI: pi } = Math\r\n\r\n    // Run the correct generator\r\n    if (mode === 'vibrant') {\r\n\r\n      const l = (81 - 57) * random() + 57\r\n      const c = (83 - 45) * random() + 45\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'sine') {\r\n\r\n      t = t == null ? random() : t\r\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\r\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\r\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'pastel') {\r\n\r\n      const l = (94 - 86) * random() + 86\r\n      const c = (26 - 9) * random() + 9\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'dark') {\r\n\r\n      const l = 10 + 10 * random()\r\n      const c = (125 - 75) * random() + 86\r\n      const h = 360 * random()\r\n      const color = new Color(l, c, h, 'lch')\r\n      return color\r\n\r\n    } else if (mode === 'rgb') {\r\n\r\n      const r = 255 * random()\r\n      const g = 255 * random()\r\n      const b = 255 * random()\r\n      const color = new Color(r, g, b)\r\n      return color\r\n\r\n    } else if (mode === 'lab') {\r\n\r\n      const l = 100 * random()\r\n      const a = 256 * random() - 128\r\n      const b = 256 * random() - 128\r\n      const color = new Color(l, a, b, 'lab')\r\n      return color\r\n\r\n    } else if (mode === 'grey') {\r\n\r\n      const grey = 255 * random()\r\n      const color = new Color(grey, grey, grey)\r\n      return color\r\n\r\n    }\r\n  }\r\n\r\n  /*\r\n  Constructing colors\r\n  */\r\n\r\n  // Test if given value is a color string\r\n  static test (color) {\r\n    return (typeof color === 'string')\r\n      && (isHex.test(color) || isRgb.test(color))\r\n  }\r\n\r\n  // Test if given value is an rgb object\r\n  static isRgb (color) {\r\n    return color && typeof color.r === 'number'\r\n      && typeof color.g === 'number'\r\n      && typeof color.b === 'number'\r\n  }\r\n\r\n  // Test if given value is a color\r\n  static isColor (color) {\r\n    return color && (\r\n      color instanceof Color\r\n      || this.isRgb(color)\r\n      || this.test(color)\r\n    )\r\n  }\r\n}\r\n", "import Matrix from './Matrix.js'\r\n\r\nexport default class Point {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (x, y) {\r\n    const base = { x: 0, y: 0 }\r\n\r\n    // ensure source as object\r\n    const source = Array.isArray(x) ? { x: x[0], y: x[1] }\r\n      : typeof x === 'object' ? { x: x.x, y: x.y }\r\n      : { x: x, y: y }\r\n\r\n    // merge source\r\n    this.x = source.x == null ? base.x : source.x\r\n    this.y = source.y == null ? base.y : source.y\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone point\r\n  clone () {\r\n    return new Point(this)\r\n  }\r\n\r\n  transform (m) {\r\n    return this.clone().transformO(m)\r\n  }\r\n\r\n  // Transform point with matrix\r\n  transformO (m) {\r\n    if (!Matrix.isMatrixLike(m)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    const { x, y } = this\r\n\r\n    // Perform the matrix multiplication\r\n    this.x = m.a * x + m.c * y + m.e\r\n    this.y = m.b * x + m.d * y + m.f\r\n\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y ]\r\n  }\r\n}\r\n\r\nexport function point (x, y) {\r\n  return new Point(x, y).transform(this.screenCTM().inverse())\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { radians } from '../utils/utils.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Element from '../elements/Element.js'\r\nimport Point from './Point.js'\r\n\r\nfunction closeEnough (a, b, threshold) {\r\n  return Math.abs(b - a) < (threshold || 1e-6)\r\n}\r\n\r\nexport default class Matrix {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  // Initialize\r\n  init (source) {\r\n    var base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\r\n\r\n    // ensure source as object\r\n    source = source instanceof Element ? source.matrixify()\r\n      : typeof source === 'string' ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\r\n      : Array.isArray(source) ? Matrix.fromArray(source)\r\n      : (typeof source === 'object' && Matrix.isMatrixLike(source)) ? source\r\n      : (typeof source === 'object') ? new Matrix().transform(source)\r\n      : arguments.length === 6 ? Matrix.fromArray([].slice.call(arguments))\r\n      : base\r\n\r\n    // Merge the source matrix with the base matrix\r\n    this.a = source.a != null ? source.a : base.a\r\n    this.b = source.b != null ? source.b : base.b\r\n    this.c = source.c != null ? source.c : base.c\r\n    this.d = source.d != null ? source.d : base.d\r\n    this.e = source.e != null ? source.e : base.e\r\n    this.f = source.f != null ? source.f : base.f\r\n\r\n    return this\r\n  }\r\n\r\n  // Clones this matrix\r\n  clone () {\r\n    return new Matrix(this)\r\n  }\r\n\r\n  // Transform a matrix into another matrix by manipulating the space\r\n  transform (o) {\r\n    // Check if o is a matrix and then left multiply it directly\r\n    if (Matrix.isMatrixLike(o)) {\r\n      var matrix = new Matrix(o)\r\n      return matrix.multiplyO(this)\r\n    }\r\n\r\n    // Get the proposed transformations and the current transformations\r\n    var t = Matrix.formatTransforms(o)\r\n    var current = this\r\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\r\n\r\n    // Construct the resulting matrix\r\n    var transformer = new Matrix()\r\n      .translateO(t.rx, t.ry)\r\n      .lmultiplyO(current)\r\n      .translateO(-ox, -oy)\r\n      .scaleO(t.scaleX, t.scaleY)\r\n      .skewO(t.skewX, t.skewY)\r\n      .shearO(t.shear)\r\n      .rotateO(t.theta)\r\n      .translateO(ox, oy)\r\n\r\n    // If we want the origin at a particular place, we force it there\r\n    if (isFinite(t.px) || isFinite(t.py)) {\r\n      const origin = new Point(ox, oy).transform(transformer)\r\n      // TODO: Replace t.px with isFinite(t.px)\r\n      const dx = t.px ? t.px - origin.x : 0\r\n      const dy = t.py ? t.py - origin.y : 0\r\n      transformer.translateO(dx, dy)\r\n    }\r\n\r\n    // Translate now after positioning\r\n    transformer.translateO(t.tx, t.ty)\r\n    return transformer\r\n  }\r\n\r\n  // Applies a matrix defined by its affine parameters\r\n  compose (o) {\r\n    if (o.origin) {\r\n      o.originX = o.origin[0]\r\n      o.originY = o.origin[1]\r\n    }\r\n    // Get the parameters\r\n    var ox = o.originX || 0\r\n    var oy = o.originY || 0\r\n    var sx = o.scaleX || 1\r\n    var sy = o.scaleY || 1\r\n    var lam = o.shear || 0\r\n    var theta = o.rotate || 0\r\n    var tx = o.translateX || 0\r\n    var ty = o.translateY || 0\r\n\r\n    // Apply the standard matrix\r\n    var result = new Matrix()\r\n      .translateO(-ox, -oy)\r\n      .scaleO(sx, sy)\r\n      .shearO(lam)\r\n      .rotateO(theta)\r\n      .translateO(tx, ty)\r\n      .lmultiplyO(this)\r\n      .translateO(ox, oy)\r\n    return result\r\n  }\r\n\r\n  // Decomposes this matrix into its affine parameters\r\n  decompose (cx = 0, cy = 0) {\r\n    // Get the parameters from the matrix\r\n    var a = this.a\r\n    var b = this.b\r\n    var c = this.c\r\n    var d = this.d\r\n    var e = this.e\r\n    var f = this.f\r\n\r\n    // Figure out if the winding direction is clockwise or counterclockwise\r\n    var determinant = a * d - b * c\r\n    var ccw = determinant > 0 ? 1 : -1\r\n\r\n    // Since we only shear in x, we can use the x basis to get the x scale\r\n    // and the rotation of the resulting matrix\r\n    var sx = ccw * Math.sqrt(a * a + b * b)\r\n    var thetaRad = Math.atan2(ccw * b, ccw * a)\r\n    var theta = 180 / Math.PI * thetaRad\r\n    var ct = Math.cos(thetaRad)\r\n    var st = Math.sin(thetaRad)\r\n\r\n    // We can then solve the y basis vector simultaneously to get the other\r\n    // two affine parameters directly from these parameters\r\n    var lam = (a * c + b * d) / determinant\r\n    var sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\r\n\r\n    // Use the translations\r\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\r\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\r\n\r\n    // Construct the decomposition and return it\r\n    return {\r\n      // Return the affine parameters\r\n      scaleX: sx,\r\n      scaleY: sy,\r\n      shear: lam,\r\n      rotate: theta,\r\n      translateX: tx,\r\n      translateY: ty,\r\n      originX: cx,\r\n      originY: cy,\r\n\r\n      // Return the matrix parameters\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n  // Left multiplies by the given matrix\r\n  multiply (matrix) {\r\n    return this.clone().multiplyO(matrix)\r\n  }\r\n\r\n  multiplyO (matrix) {\r\n    // Get the matrices\r\n    var l = this\r\n    var r = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\r\n\r\n  lmultiply (matrix) {\r\n    return this.clone().lmultiplyO(matrix)\r\n  }\r\n\r\n  lmultiplyO (matrix) {\r\n    var r = this\r\n    var l = matrix instanceof Matrix\r\n      ? matrix\r\n      : new Matrix(matrix)\r\n\r\n    return Matrix.matrixMultiply(l, r, this)\r\n  }\r\n\r\n  // Inverses matrix\r\n  inverseO () {\r\n    // Get the current parameters out of the matrix\r\n    var a = this.a\r\n    var b = this.b\r\n    var c = this.c\r\n    var d = this.d\r\n    var e = this.e\r\n    var f = this.f\r\n\r\n    // Invert the 2x2 matrix in the top left\r\n    var det = a * d - b * c\r\n    if (!det) throw new Error('Cannot invert ' + this)\r\n\r\n    // Calculate the top 2x2 matrix\r\n    var na = d / det\r\n    var nb = -b / det\r\n    var nc = -c / det\r\n    var nd = a / det\r\n\r\n    // Apply the inverted matrix to the top right\r\n    var ne = -(na * e + nc * f)\r\n    var nf = -(nb * e + nd * f)\r\n\r\n    // Construct the inverted matrix\r\n    this.a = na\r\n    this.b = nb\r\n    this.c = nc\r\n    this.d = nd\r\n    this.e = ne\r\n    this.f = nf\r\n\r\n    return this\r\n  }\r\n\r\n  inverse () {\r\n    return this.clone().inverseO()\r\n  }\r\n\r\n  // Translate matrix\r\n  translate (x, y) {\r\n    return this.clone().translateO(x, y)\r\n  }\r\n\r\n  translateO (x, y) {\r\n    this.e += x || 0\r\n    this.f += y || 0\r\n    return this\r\n  }\r\n\r\n  // Scale matrix\r\n  scale (x, y, cx, cy) {\r\n    return this.clone().scaleO(...arguments)\r\n  }\r\n\r\n  scaleO (x, y = x, cx = 0, cy = 0) {\r\n    // Support uniform scaling\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * x\r\n    this.b = b * y\r\n    this.c = c * x\r\n    this.d = d * y\r\n    this.e = e * x - cx * x + cx\r\n    this.f = f * y - cy * y + cy\r\n\r\n    return this\r\n  }\r\n\r\n  // Rotate matrix\r\n  rotate (r, cx, cy) {\r\n    return this.clone().rotateO(r, cx, cy)\r\n  }\r\n\r\n  rotateO (r, cx = 0, cy = 0) {\r\n    // Convert degrees to radians\r\n    r = radians(r)\r\n\r\n    const cos = Math.cos(r)\r\n    const sin = Math.sin(r)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a * cos - b * sin\r\n    this.b = b * cos + a * sin\r\n    this.c = c * cos - d * sin\r\n    this.d = d * cos + c * sin\r\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\r\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\r\n\r\n    return this\r\n  }\r\n\r\n  // Flip matrix on x or y, at a given offset\r\n  flip (axis, around) {\r\n    return this.clone().flipO(axis, around)\r\n  }\r\n\r\n  flipO (axis, around) {\r\n    return axis === 'x' ? this.scaleO(-1, 1, around, 0)\r\n      : axis === 'y' ? this.scaleO(1, -1, 0, around)\r\n      : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\r\n  }\r\n\r\n  // Shear matrix\r\n  shear (a, cx, cy) {\r\n    return this.clone().shearO(a, cx, cy)\r\n  }\r\n\r\n  shearO (lx, cx = 0, cy = 0) {\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.c = c + d * lx\r\n    this.e = e + f * lx - cy * lx\r\n\r\n    return this\r\n  }\r\n\r\n  // Skew Matrix\r\n  skew (x, y, cx, cy) {\r\n    return this.clone().skewO(...arguments)\r\n  }\r\n\r\n  skewO (x, y = x, cx = 0, cy = 0) {\r\n    // support uniformal skew\r\n    if (arguments.length === 3) {\r\n      cy = cx\r\n      cx = y\r\n      y = x\r\n    }\r\n\r\n    // Convert degrees to radians\r\n    x = radians(x)\r\n    y = radians(y)\r\n\r\n    const lx = Math.tan(x)\r\n    const ly = Math.tan(y)\r\n\r\n    const { a, b, c, d, e, f } = this\r\n\r\n    this.a = a + b * lx\r\n    this.b = b + a * ly\r\n    this.c = c + d * lx\r\n    this.d = d + c * ly\r\n    this.e = e + f * lx - cy * lx\r\n    this.f = f + e * ly - cx * ly\r\n\r\n    return this\r\n  }\r\n\r\n  // SkewX\r\n  skewX (x, cx, cy) {\r\n    return this.skew(x, 0, cx, cy)\r\n  }\r\n\r\n  skewXO (x, cx, cy) {\r\n    return this.skewO(x, 0, cx, cy)\r\n  }\r\n\r\n  // SkewY\r\n  skewY (y, cx, cy) {\r\n    return this.skew(0, y, cx, cy)\r\n  }\r\n\r\n  skewYO (y, cx, cy) {\r\n    return this.skewO(0, y, cx, cy)\r\n  }\r\n\r\n  // Transform around a center point\r\n  aroundO (cx, cy, matrix) {\r\n    var dx = cx || 0\r\n    var dy = cy || 0\r\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\r\n  }\r\n\r\n  around (cx, cy, matrix) {\r\n    return this.clone().aroundO(cx, cy, matrix)\r\n  }\r\n\r\n  // Check if two matrices are equal\r\n  equals (other) {\r\n    var comp = new Matrix(other)\r\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\r\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\r\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\r\n  }\r\n\r\n  // Convert matrix to string\r\n  toString () {\r\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\r\n  }\r\n\r\n  valueOf () {\r\n    return {\r\n      a: this.a,\r\n      b: this.b,\r\n      c: this.c,\r\n      d: this.d,\r\n      e: this.e,\r\n      f: this.f\r\n    }\r\n  }\r\n\r\n  static fromArray (a) {\r\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\r\n  }\r\n\r\n  static isMatrixLike (o) {\r\n    return (\r\n      o.a != null\r\n      || o.b != null\r\n      || o.c != null\r\n      || o.d != null\r\n      || o.e != null\r\n      || o.f != null\r\n    )\r\n  }\r\n\r\n  static formatTransforms (o) {\r\n    // Get all of the parameters required to form the matrix\r\n    var flipBoth = o.flip === 'both' || o.flip === true\r\n    var flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\r\n    var flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\r\n    var skewX = o.skew && o.skew.length ? o.skew[0]\r\n      : isFinite(o.skew) ? o.skew\r\n      : isFinite(o.skewX) ? o.skewX\r\n      : 0\r\n    var skewY = o.skew && o.skew.length ? o.skew[1]\r\n      : isFinite(o.skew) ? o.skew\r\n      : isFinite(o.skewY) ? o.skewY\r\n      : 0\r\n    var scaleX = o.scale && o.scale.length ? o.scale[0] * flipX\r\n      : isFinite(o.scale) ? o.scale * flipX\r\n      : isFinite(o.scaleX) ? o.scaleX * flipX\r\n      : flipX\r\n    var scaleY = o.scale && o.scale.length ? o.scale[1] * flipY\r\n      : isFinite(o.scale) ? o.scale * flipY\r\n      : isFinite(o.scaleY) ? o.scaleY * flipY\r\n      : flipY\r\n    var shear = o.shear || 0\r\n    var theta = o.rotate || o.theta || 0\r\n    var origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\r\n    var ox = origin.x\r\n    var oy = origin.y\r\n    var position = new Point(o.position || o.px || o.positionX, o.py || o.positionY)\r\n    var px = position.x\r\n    var py = position.y\r\n    var translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\r\n    var tx = translate.x\r\n    var ty = translate.y\r\n    var relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\r\n    var rx = relative.x\r\n    var ry = relative.y\r\n\r\n    // Populate all of the values\r\n    return {\r\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\r\n    }\r\n  }\r\n\r\n  // left matrix, right matrix, target matrix which is overwritten\r\n  static matrixMultiply (l, r, o) {\r\n    // Work out the product directly\r\n    var a = l.a * r.a + l.c * r.b\r\n    var b = l.b * r.a + l.d * r.b\r\n    var c = l.a * r.c + l.c * r.d\r\n    var d = l.b * r.c + l.d * r.d\r\n    var e = l.e + l.a * r.e + l.c * r.f\r\n    var f = l.f + l.b * r.e + l.d * r.f\r\n\r\n    // make sure to use local variables because l/r and o could be the same\r\n    o.a = a\r\n    o.b = b\r\n    o.c = c\r\n    o.d = d\r\n    o.e = e\r\n    o.f = f\r\n\r\n    return o\r\n  }\r\n}\r\n\r\nexport function ctm () {\r\n  return new Matrix(this.node.getCTM())\r\n}\r\n\r\nexport function screenCTM () {\r\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\r\n     This is needed because FF does not return the transformation matrix\r\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\r\n     However all other Browsers do that */\r\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\r\n    var rect = this.rect(1, 1)\r\n    var m = rect.node.getScreenCTM()\r\n    rect.remove()\r\n    return new Matrix(m)\r\n  }\r\n  return new Matrix(this.node.getScreenCTM())\r\n}\r\n\r\nregister(Matrix, 'Matrix')\r\n", "import { globals } from '../../utils/window.js'\r\nimport { makeInstance } from '../../utils/adopter.js'\r\n\r\nexport default function parser () {\r\n  // Reuse cached element if possible\r\n  if (!parser.nodes) {\r\n    const svg = makeInstance().size(2, 0)\r\n    svg.node.style.cssText = [\r\n      'opacity: 0',\r\n      'position: absolute',\r\n      'left: -100%',\r\n      'top: -100%',\r\n      'overflow: hidden'\r\n    ].join(';')\r\n\r\n    svg.attr('focusable', 'false')\r\n    svg.attr('aria-hidden', 'true')\r\n\r\n    const path = svg.path().node\r\n\r\n    parser.nodes = { svg, path }\r\n  }\r\n\r\n  if (!parser.nodes.svg.node.parentNode) {\r\n    const b = globals.document.body || globals.document.documentElement\r\n    parser.nodes.svg.addTo(b)\r\n  }\r\n\r\n  return parser.nodes\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Matrix from './Matrix.js'\r\nimport Point from './Point.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nfunction isNulledBox (box) {\r\n  return !box.width && !box.height && !box.x && !box.y\r\n}\r\n\r\nfunction domContains (node) {\r\n  return node === globals.document\r\n    || (globals.document.documentElement.contains || function (node) {\r\n      // This is IE - it does not support contains() for top-level SVGs\r\n      while (node.parentNode) {\r\n        node = node.parentNode\r\n      }\r\n      return node === globals.document\r\n    }).call(globals.document.documentElement, node)\r\n}\r\n\r\nexport default class Box {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (source) {\r\n    var base = [ 0, 0, 0, 0 ]\r\n    source = typeof source === 'string' ? source.split(delimiter).map(parseFloat)\r\n      : Array.isArray(source) ? source\r\n      : typeof source === 'object' ? [ source.left != null ? source.left\r\n      : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\r\n      : arguments.length === 4 ? [].slice.call(arguments)\r\n      : base\r\n\r\n    this.x = source[0] || 0\r\n    this.y = source[1] || 0\r\n    this.width = this.w = source[2] || 0\r\n    this.height = this.h = source[3] || 0\r\n\r\n    // Add more bounding box properties\r\n    this.x2 = this.x + this.w\r\n    this.y2 = this.y + this.h\r\n    this.cx = this.x + this.w / 2\r\n    this.cy = this.y + this.h / 2\r\n\r\n    return this\r\n  }\r\n\r\n  // Merge rect box with another, return a new instance\r\n  merge (box) {\r\n    const x = Math.min(this.x, box.x)\r\n    const y = Math.min(this.y, box.y)\r\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\r\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\r\n\r\n    return new Box(x, y, width, height)\r\n  }\r\n\r\n  transform (m) {\r\n    if (!(m instanceof Matrix)) {\r\n      m = new Matrix(m)\r\n    }\r\n\r\n    let xMin = Infinity\r\n    let xMax = -Infinity\r\n    let yMin = Infinity\r\n    let yMax = -Infinity\r\n\r\n    const pts = [\r\n      new Point(this.x, this.y),\r\n      new Point(this.x2, this.y),\r\n      new Point(this.x, this.y2),\r\n      new Point(this.x2, this.y2)\r\n    ]\r\n\r\n    pts.forEach(function (p) {\r\n      p = p.transform(m)\r\n      xMin = Math.min(xMin, p.x)\r\n      xMax = Math.max(xMax, p.x)\r\n      yMin = Math.min(yMin, p.y)\r\n      yMax = Math.max(yMax, p.y)\r\n    })\r\n\r\n    return new Box(\r\n      xMin, yMin,\r\n      xMax - xMin,\r\n      yMax - yMin\r\n    )\r\n  }\r\n\r\n  addOffset () {\r\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\r\n    this.x += globals.window.pageXOffset\r\n    this.y += globals.window.pageYOffset\r\n    return this\r\n  }\r\n\r\n  toString () {\r\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.x, this.y, this.width, this.height ]\r\n  }\r\n\r\n  isNulled () {\r\n    return isNulledBox(this)\r\n  }\r\n}\r\n\r\nfunction getBox (cb, retry) {\r\n  let box\r\n\r\n  try {\r\n    box = cb(this.node)\r\n\r\n    if (isNulledBox(box) && !domContains(this.node)) {\r\n      throw new Error('Element not in the dom')\r\n    }\r\n  } catch (e) {\r\n    box = retry(this)\r\n  }\r\n\r\n  return box\r\n}\r\n\r\nexport function bbox () {\r\n  return new Box(getBox.call(this, (node) => node.getBBox(), (el) => {\r\n    try {\r\n      const clone = el.clone().addTo(parser().svg).show()\r\n      const box = clone.node.getBBox()\r\n      clone.remove()\r\n      return box\r\n    } catch (e) {\r\n      throw new Error('Getting bbox of element \"' + el.node.nodeName + '\" is not possible. ' + e.toString())\r\n    }\r\n  }))\r\n}\r\n\r\nexport function rbox (el) {\r\n  const box = new Box(getBox.call(this, (node) => node.getBoundingClientRect(), (el) => {\r\n    throw new Error('Getting rbox of element \"' + el.node.nodeName + '\" is not possible')\r\n  }))\r\n  if (el) return box.transform(el.screenCTM().inverse())\r\n  return box.addOffset()\r\n}\r\n\r\nregisterMethods({\r\n  viewbox: {\r\n    viewbox (x, y, width, height) {\r\n      // act as getter\r\n      if (x == null) return new Box(this.attr('viewBox'))\r\n\r\n      // act as setter\r\n      return this.attr('viewBox', new Box(x, y, width, height))\r\n    },\r\n\r\n    zoom (level, point) {\r\n      let width = this.node.clientWidth\r\n      let height = this.node.clientHeight\r\n      const v = this.viewbox()\r\n\r\n      // Firefox does not support clientHeight and returns 0\r\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=874811\r\n      if (!width && !height) {\r\n        var style = window.getComputedStyle(this.node)\r\n        width = parseFloat(style.getPropertyValue('width'))\r\n        height = parseFloat(style.getPropertyValue('height'))\r\n      }\r\n\r\n      const zoomX = width / v.width\r\n      const zoomY = height / v.height\r\n      const zoom = Math.min(zoomX, zoomY)\r\n\r\n      if (level == null) {\r\n        return zoom\r\n      }\r\n\r\n      let zoomAmount = zoom / level\r\n      if (zoomAmount === Infinity) zoomAmount = Number.MIN_VALUE\r\n\r\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\r\n\r\n      const box = new Box(v).transform(\r\n        new Matrix({ scale: zoomAmount, origin: point })\r\n      )\r\n\r\n      return this.viewbox(box)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Box, 'Box')\r\n", "/* eslint no-new-func: \"off\" */\r\nexport const subClassArray = (function () {\r\n  try {\r\n    // try es6 subclassing\r\n    return Function('name', 'baseClass', '_constructor', [\r\n      'baseClass = baseClass || Array',\r\n      'return {',\r\n      '  [name]: class extends baseClass {',\r\n      '    constructor (...args) {',\r\n      '      super(...args)',\r\n      '      _constructor && _constructor.apply(this, args)',\r\n      '    }',\r\n      '  }',\r\n      '}[name]'\r\n    ].join('\\n'))\r\n  } catch (e) {\r\n    // Use es5 approach\r\n    return (name, baseClass = Array, _constructor) => {\r\n      const Arr = function () {\r\n        baseClass.apply(this, arguments)\r\n        _constructor && _constructor.apply(this, arguments)\r\n      }\r\n\r\n      Arr.prototype = Object.create(baseClass.prototype)\r\n      Arr.prototype.constructor = Arr\r\n\r\n      Arr.prototype.map = function (fn) {\r\n        const arr = new Arr()\r\n        arr.push.apply(arr, Array.prototype.map.call(this, fn))\r\n        return arr\r\n      }\r\n\r\n      return Arr\r\n    }\r\n  }\r\n})()\r\n", "import { extend } from '../utils/adopter.js'\r\nimport { subClassArray } from './ArrayPolyfill.js'\r\n\r\nconst List = subClassArray('List', Array, function (arr = []) {\r\n  // This catches the case, that native map tries to create an array with new Array(1)\r\n  if (typeof arr === 'number') return this\r\n  this.length = 0\r\n  this.push(...arr)\r\n})\r\n\r\nexport default List\r\n\r\nextend(List, {\r\n  each (fnOrMethodName, ...args) {\r\n    if (typeof fnOrMethodName === 'function') {\r\n      return this.map((el) => {\r\n        return fnOrMethodName.call(el, el)\r\n      })\r\n    } else {\r\n      return this.map(el => {\r\n        return el[fnOrMethodName](...args)\r\n      })\r\n    }\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  }\r\n})\r\n\r\nconst reserved = [ 'toArray', 'constructor', 'each' ]\r\n\r\nList.extend = function (methods) {\r\n  methods = methods.reduce((obj, name) => {\r\n    // Don't overwrite own methods\r\n    if (reserved.includes(name)) return obj\r\n\r\n    // Don't add private methods\r\n    if (name[0] === '_') return obj\r\n\r\n    // Relay every call to each()\r\n    obj[name] = function (...attrs) {\r\n      return this.each(name, ...attrs)\r\n    }\r\n    return obj\r\n  }, {})\r\n\r\n  extend(List, methods)\r\n}\r\n", "import { adopt } from '../../utils/adopter.js'\r\nimport { globals } from '../../utils/window.js'\r\nimport { map } from '../../utils/utils.js'\r\nimport List from '../../types/List.js'\r\n\r\nexport default function baseFind (query, parent) {\r\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\r\n    return adopt(node)\r\n  }))\r\n}\r\n\r\n// Scoped find method\r\nexport function find (query) {\r\n  return baseFind(query, this.node)\r\n}\r\n\r\nexport function findOne (query) {\r\n  return adopt(this.node.querySelector(query))\r\n}\r\n", "import { dispatch, off, on } from '../modules/core/event.js'\r\nimport { register } from '../utils/adopter.js'\r\nimport Base from './Base.js'\r\n\r\nexport default class EventTarget extends Base {\r\n  constructor ({ events = {} } = {}) {\r\n    super()\r\n    this.events = events\r\n  }\r\n\r\n  addEventListener () {}\r\n\r\n  dispatch (event, data) {\r\n    return dispatch(this, event, data)\r\n  }\r\n\r\n  dispatchEvent (event) {\r\n    const bag = this.getEventHolder().events\r\n    if (!bag) return true\r\n\r\n    const events = bag[event.type]\r\n\r\n    for (const i in events) {\r\n      for (const j in events[i]) {\r\n        events[i][j](event)\r\n      }\r\n    }\r\n\r\n    return !event.defaultPrevented\r\n  }\r\n\r\n  // Fire given event\r\n  fire (event, data) {\r\n    this.dispatch(event, data)\r\n    return this\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this\r\n  }\r\n\r\n  // Unbind event from listener\r\n  off (event, listener) {\r\n    off(this, event, listener)\r\n    return this\r\n  }\r\n\r\n  // Bind given event to listener\r\n  on (event, listener, binding, options) {\r\n    on(this, event, listener, binding, options)\r\n    return this\r\n  }\r\n\r\n  removeEventListener () {}\r\n}\r\n\r\nregister(EventTarget, 'EventTarget')\r\n", "\r\nexport function noop () {}\r\n\r\n// Default animation values\r\nexport const timeline = {\r\n  duration: 400,\r\n  ease: '>',\r\n  delay: 0\r\n}\r\n\r\n// Default attribute values\r\nexport const attrs = {\r\n\r\n  // fill and stroke\r\n  'fill-opacity': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': 0,\r\n  'stroke-linejoin': 'miter',\r\n  'stroke-linecap': 'butt',\r\n  fill: '#000000',\r\n  stroke: '#000000',\r\n  opacity: 1,\r\n\r\n  // position\r\n  x: 0,\r\n  y: 0,\r\n  cx: 0,\r\n  cy: 0,\r\n\r\n  // size\r\n  width: 0,\r\n  height: 0,\r\n\r\n  // radius\r\n  r: 0,\r\n  rx: 0,\r\n  ry: 0,\r\n\r\n  // gradient\r\n  offset: 0,\r\n  'stop-opacity': 1,\r\n  'stop-color': '#000000',\r\n\r\n  // text\r\n  'text-anchor': 'start'\r\n}\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport { subClassArray } from './ArrayPolyfill.js'\r\n\r\nconst SVGArray = subClassArray('SVGArray', Array, function (arr) {\r\n  this.init(arr)\r\n})\r\n\r\nexport default SVGArray\r\n\r\nextend(SVGArray, {\r\n  init (arr) {\r\n    // This catches the case, that native map tries to create an array with new Array(1)\r\n    if (typeof arr === 'number') return this\r\n    this.length = 0\r\n    this.push(...this.parse(arr))\r\n    return this\r\n  },\r\n\r\n  toArray () {\r\n    return Array.prototype.concat.apply([], this)\r\n  },\r\n\r\n  toString () {\r\n    return this.join(' ')\r\n  },\r\n\r\n  // Flattens the array if needed\r\n  valueOf () {\r\n    const ret = []\r\n    ret.push(...this)\r\n    return ret\r\n  },\r\n\r\n  // Parse whitespace separated string\r\n  parse (array = []) {\r\n    // If already is an array, no need to parse it\r\n    if (array instanceof Array) return array\r\n\r\n    return array.trim().split(delimiter).map(parseFloat)\r\n  },\r\n\r\n  clone () {\r\n    return new this.constructor(this)\r\n  },\r\n\r\n  toSet () {\r\n    return new Set(this)\r\n  }\r\n})\r\n", "import { numberAndUnit } from '../modules/core/regex.js'\r\n\r\n// Module for unit convertions\r\nexport default class SVGNumber {\r\n  // Initialize\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (value, unit) {\r\n    unit = Array.isArray(value) ? value[1] : unit\r\n    value = Array.isArray(value) ? value[0] : value\r\n\r\n    // initialize defaults\r\n    this.value = 0\r\n    this.unit = unit || ''\r\n\r\n    // parse value\r\n    if (typeof value === 'number') {\r\n      // ensure a valid numeric value\r\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\r\n    } else if (typeof value === 'string') {\r\n      unit = value.match(numberAndUnit)\r\n\r\n      if (unit) {\r\n        // make value numeric\r\n        this.value = parseFloat(unit[1])\r\n\r\n        // normalize\r\n        if (unit[5] === '%') {\r\n          this.value /= 100\r\n        } else if (unit[5] === 's') {\r\n          this.value *= 1000\r\n        }\r\n\r\n        // store unit\r\n        this.unit = unit[5]\r\n      }\r\n    } else {\r\n      if (value instanceof SVGNumber) {\r\n        this.value = value.valueOf()\r\n        this.unit = value.unit\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  toString () {\r\n    return (this.unit === '%' ? ~~(this.value * 1e8) / 1e6\r\n      : this.unit === 's' ? this.value / 1e3\r\n      : this.value\r\n    ) + this.unit\r\n  }\r\n\r\n  toJSON () {\r\n    return this.toString()\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value, this.unit ]\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n  // Add number\r\n  plus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this + number, this.unit || number.unit)\r\n  }\r\n\r\n  // Subtract number\r\n  minus (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this - number, this.unit || number.unit)\r\n  }\r\n\r\n  // Multiply number\r\n  times (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this * number, this.unit || number.unit)\r\n  }\r\n\r\n  // Divide number\r\n  divide (number) {\r\n    number = new SVGNumber(number)\r\n    return new SVGNumber(this / number, this.unit || number.unit)\r\n  }\r\n\r\n  convert (unit) {\r\n    return new SVGNumber(this.value, unit)\r\n  }\r\n}\r\n", "import { attrs as defaults } from './defaults.js'\r\nimport { isNumber } from './regex.js'\r\nimport Color from '../../types/Color.js'\r\nimport SVGArray from '../../types/SVGArray.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\nconst hooks = []\r\nexport function registerAttrHook (fn) {\r\n  hooks.push(fn)\r\n}\r\n\r\n// Set svg element attribute\r\nexport default function attr (attr, val, ns) {\r\n  // act as full getter\r\n  if (attr == null) {\r\n    // get an object of attributes\r\n    attr = {}\r\n    val = this.node.attributes\r\n\r\n    for (const node of val) {\r\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\r\n        ? parseFloat(node.nodeValue)\r\n        : node.nodeValue\r\n    }\r\n\r\n    return attr\r\n  } else if (attr instanceof Array) {\r\n    // loop through array and get all values\r\n    return attr.reduce((last, curr) => {\r\n      last[curr] = this.attr(curr)\r\n      return last\r\n    }, {})\r\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\r\n    // apply every attribute individually if an object is passed\r\n    for (val in attr) this.attr(val, attr[val])\r\n  } else if (val === null) {\r\n    // remove value\r\n    this.node.removeAttribute(attr)\r\n  } else if (val == null) {\r\n    // act as a getter if the first and only argument is not an object\r\n    val = this.node.getAttribute(attr)\r\n    return val == null ? defaults[attr]\r\n      : isNumber.test(val) ? parseFloat(val)\r\n      : val\r\n  } else {\r\n    // Loop through hooks and execute them to convert value\r\n    val = hooks.reduce((_val, hook) => {\r\n      return hook(attr, _val, this)\r\n    }, val)\r\n\r\n    // ensure correct numeric values (also accepts NaN and Infinity)\r\n    if (typeof val === 'number') {\r\n      val = new SVGNumber(val)\r\n    } else if (Color.isColor(val)) {\r\n      // ensure full hex color\r\n      val = new Color(val)\r\n    } else if (val.constructor === Array) {\r\n      // Check for plain arrays and parse array values\r\n      val = new SVGArray(val)\r\n    }\r\n\r\n    // if the passed attribute is leading...\r\n    if (attr === 'leading') {\r\n      // ... call the leading method instead\r\n      if (this.leading) {\r\n        this.leading(val)\r\n      }\r\n    } else {\r\n      // set given attribute on node\r\n      typeof ns === 'string' ? this.node.setAttributeNS(ns, attr, val.toString())\r\n        : this.node.setAttribute(attr, val.toString())\r\n    }\r\n\r\n    // rebuild if required\r\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\r\n      this.rebuild()\r\n    }\r\n  }\r\n\r\n  return this\r\n}\r\n", "import {\r\n  adopt,\r\n  assignNewId,\r\n  eid,\r\n  extend,\r\n  makeInstance,\r\n  create,\r\n  register\r\n} from '../utils/adopter.js'\r\nimport { find, findOne } from '../modules/core/selector.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { map } from '../utils/utils.js'\r\nimport { ns } from '../modules/core/namespaces.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport List from '../types/List.js'\r\nimport attr from '../modules/core/attr.js'\r\n\r\nexport default class Dom extends EventTarget {\r\n  constructor (node, attrs) {\r\n    super(node)\r\n    this.node = node\r\n    this.type = node.nodeName\r\n\r\n    if (attrs && node !== attrs) {\r\n      this.attr(attrs)\r\n    }\r\n  }\r\n\r\n  // Add given element at a position\r\n  add (element, i) {\r\n    element = makeInstance(element)\r\n\r\n    if (i == null) {\r\n      this.node.appendChild(element.node)\r\n    } else if (element.node !== this.node.childNodes[i]) {\r\n      this.node.insertBefore(element.node, this.node.childNodes[i])\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Add element to given container and return self\r\n  addTo (parent) {\r\n    return makeInstance(parent).put(this)\r\n  }\r\n\r\n  // Returns all child elements\r\n  children () {\r\n    return new List(map(this.node.children, function (node) {\r\n      return adopt(node)\r\n    }))\r\n  }\r\n\r\n  // Remove all elements in this container\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Clone element\r\n  clone () {\r\n    // write dom data to the dom so the clone can pickup the data\r\n    this.writeDataToDom()\r\n\r\n    // clone element and assign new id\r\n    return assignNewId(this.node.cloneNode(true))\r\n  }\r\n\r\n  // Iterates over all children and invokes a given block\r\n  each (block, deep) {\r\n    var children = this.children()\r\n    var i, il\r\n\r\n    for (i = 0, il = children.length; i < il; i++) {\r\n      block.apply(children[i], [ i, children ])\r\n\r\n      if (deep) {\r\n        children[i].each(block, deep)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  element (nodeName) {\r\n    return this.put(new Dom(create(nodeName)))\r\n  }\r\n\r\n  // Get first child\r\n  first () {\r\n    return adopt(this.node.firstChild)\r\n  }\r\n\r\n  // Get a element at the given index\r\n  get (i) {\r\n    return adopt(this.node.childNodes[i])\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this.node\r\n  }\r\n\r\n  getEventTarget () {\r\n    return this.node\r\n  }\r\n\r\n  // Checks if the given element is a child\r\n  has (element) {\r\n    return this.index(element) >= 0\r\n  }\r\n\r\n  // Get / set id\r\n  id (id) {\r\n    // generate new id if no id set\r\n    if (typeof id === 'undefined' && !this.node.id) {\r\n      this.node.id = eid(this.type)\r\n    }\r\n\r\n    // dont't set directly width this.node.id to make `null` work correctly\r\n    return this.attr('id', id)\r\n  }\r\n\r\n  // Gets index of given element\r\n  index (element) {\r\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\r\n  }\r\n\r\n  // Get the last child\r\n  last () {\r\n    return adopt(this.node.lastChild)\r\n  }\r\n\r\n  // matches the element vs a css selector\r\n  matches (selector) {\r\n    const el = this.node\r\n    return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector)\r\n  }\r\n\r\n  // Returns the parent element instance\r\n  parent (type) {\r\n    var parent = this\r\n\r\n    // check for parent\r\n    if (!parent.node.parentNode) return null\r\n\r\n    // get parent element\r\n    parent = adopt(parent.node.parentNode)\r\n\r\n    if (!type) return parent\r\n\r\n    // loop trough ancestors if type is given\r\n    while (parent) {\r\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\r\n      if (!parent.node.parentNode || parent.node.parentNode.nodeName === '#document' || parent.node.parentNode.nodeName === '#document-fragment') return null // #759, #720\r\n      parent = adopt(parent.node.parentNode)\r\n    }\r\n  }\r\n\r\n  // Basically does the same as `add()` but returns the added element instead\r\n  put (element, i) {\r\n    this.add(element, i)\r\n    return element\r\n  }\r\n\r\n  // Add element to given container and return container\r\n  putIn (parent) {\r\n    return makeInstance(parent).add(this)\r\n  }\r\n\r\n  // Remove element\r\n  remove () {\r\n    if (this.parent()) {\r\n      this.parent().removeElement(this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Remove a given child\r\n  removeElement (element) {\r\n    this.node.removeChild(element.node)\r\n\r\n    return this\r\n  }\r\n\r\n  // Replace this with element\r\n  replace (element) {\r\n    element = makeInstance(element)\r\n    this.node.parentNode.replaceChild(element.node, this.node)\r\n    return element\r\n  }\r\n\r\n  round (precision = 2, map) {\r\n    const factor = 10 ** precision\r\n    const attrs = this.attr()\r\n\r\n    // If we have no map, build one from attrs\r\n    if (!map) {\r\n      map = Object.keys(attrs)\r\n    }\r\n\r\n    // Holds rounded attributes\r\n    const newAttrs = {}\r\n    map.forEach((key) => {\r\n      newAttrs[key] = Math.round(attrs[key] * factor) / factor\r\n    })\r\n\r\n    this.attr(newAttrs)\r\n    return this\r\n  }\r\n\r\n  // Return id on string conversion\r\n  toString () {\r\n    return this.id()\r\n  }\r\n\r\n  // Import raw svg\r\n  svg (svgOrFn, outerHTML) {\r\n    var well, len, fragment\r\n\r\n    if (svgOrFn === false) {\r\n      outerHTML = false\r\n      svgOrFn = null\r\n    }\r\n\r\n    // act as getter if no svg string is given\r\n    if (svgOrFn == null || typeof svgOrFn === 'function') {\r\n      // The default for exports is, that the outerNode is included\r\n      outerHTML = outerHTML == null ? true : outerHTML\r\n\r\n      // write svgjs data to the dom\r\n      this.writeDataToDom()\r\n      let current = this\r\n\r\n      // An export modifier was passed\r\n      if (svgOrFn != null) {\r\n        current = adopt(current.node.cloneNode(true))\r\n\r\n        // If the user wants outerHTML we need to process this node, too\r\n        if (outerHTML) {\r\n          const result = svgOrFn(current)\r\n          current = result || current\r\n\r\n          // The user does not want this node? Well, then he gets nothing\r\n          if (result === false) return ''\r\n        }\r\n\r\n        // Deep loop through all children and apply modifier\r\n        current.each(function () {\r\n          const result = svgOrFn(this)\r\n          const _this = result || this\r\n\r\n          // If modifier returns false, discard node\r\n          if (result === false) {\r\n            this.remove()\r\n\r\n            // If modifier returns new node, use it\r\n          } else if (result && this !== _this) {\r\n            this.replace(_this)\r\n          }\r\n        }, true)\r\n      }\r\n\r\n      // Return outer or inner content\r\n      return outerHTML\r\n        ? current.node.outerHTML\r\n        : current.node.innerHTML\r\n    }\r\n\r\n    // Act as setter if we got a string\r\n\r\n    // The default for import is, that the current node is not replaced\r\n    outerHTML = outerHTML == null ? false : outerHTML\r\n\r\n    // Create temporary holder\r\n    well = globals.document.createElementNS(ns, 'svg')\r\n    fragment = globals.document.createDocumentFragment()\r\n\r\n    // Dump raw svg\r\n    well.innerHTML = svgOrFn\r\n\r\n    // Transplant nodes into the fragment\r\n    for (len = well.children.length; len--;) {\r\n      fragment.appendChild(well.firstElementChild)\r\n    }\r\n\r\n    const parent = this.parent()\r\n\r\n    // Add the whole fragment at once\r\n    return outerHTML\r\n      ? this.replace(fragment) && parent\r\n      : this.add(fragment)\r\n  }\r\n\r\n  words (text) {\r\n    // This is faster than removing all children and adding a new one\r\n    this.node.textContent = text\r\n    return this\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // dump variables recursively\r\n    this.each(function () {\r\n      this.writeDataToDom()\r\n    })\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nextend(Dom, { attr, find, findOne })\r\nregister(Dom, 'Dom')\r\n", "import { bbox, rbox } from '../types/Box.js'\r\nimport { ctm, screenCTM } from '../types/Matrix.js'\r\nimport {\r\n  extend,\r\n  getClass,\r\n  makeInstance,\r\n  register,\r\n  root\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { point } from '../types/Point.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { reference } from '../modules/core/regex.js'\r\nimport Dom from './Dom.js'\r\nimport List from '../types/List.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\n\r\nexport default class Element extends Dom {\r\n  constructor (node, attrs) {\r\n    super(node, attrs)\r\n\r\n    // initialize data object\r\n    this.dom = {}\r\n\r\n    // create circular reference\r\n    this.node.instance = this\r\n\r\n    if (node.hasAttribute('svgjs:data')) {\r\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\r\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\r\n    }\r\n  }\r\n\r\n  // Move element by its center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  }\r\n\r\n  // Move by center over x-axis\r\n  cx (x) {\r\n    return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\r\n  }\r\n\r\n  // Move by center over y-axis\r\n  cy (y) {\r\n    return y == null\r\n      ? this.y() + this.height() / 2\r\n      : this.y(y - this.height() / 2)\r\n  }\r\n\r\n  // Get defs\r\n  defs () {\r\n    return this.root().defs()\r\n  }\r\n\r\n  // Relative move over x and y axes\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  }\r\n\r\n  // Relative move over x axis\r\n  dx (x = 0) {\r\n    return this.x(new SVGNumber(x).plus(this.x()))\r\n  }\r\n\r\n  // Relative move over y axis\r\n  dy (y = 0) {\r\n    return this.y(new SVGNumber(y).plus(this.y()))\r\n  }\r\n\r\n  // Get parent document\r\n  root () {\r\n    const p = this.parent(getClass(root))\r\n    return p && p.root()\r\n  }\r\n\r\n  getEventHolder () {\r\n    return this\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return this.attr('height', height)\r\n  }\r\n\r\n  // Checks whether the given point inside the bounding box of the element\r\n  inside (x, y) {\r\n    const box = this.bbox()\r\n\r\n    return x > box.x\r\n      && y > box.y\r\n      && x < box.x + box.width\r\n      && y < box.y + box.height\r\n  }\r\n\r\n  // Move element to given x and y values\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n\r\n  // return array of all ancestors of given type up to the root svg\r\n  parents (until = globals.document) {\r\n    until = makeInstance(until)\r\n    const parents = new List()\r\n    let parent = this\r\n\r\n    while (\r\n      (parent = parent.parent())\r\n      && parent.node !== until.node\r\n      && parent.node !== globals.document\r\n    ) {\r\n      parents.push(parent)\r\n    }\r\n\r\n    return parents\r\n  }\r\n\r\n  // Get referenced element form attribute value\r\n  reference (attr) {\r\n    attr = this.attr(attr)\r\n    if (!attr) return null\r\n\r\n    const m = attr.match(reference)\r\n    return m ? makeInstance(m[1]) : null\r\n  }\r\n\r\n  // set given data to the elements data property\r\n  setData (o) {\r\n    this.dom = o\r\n    return this\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    const p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .width(new SVGNumber(p.width))\r\n      .height(new SVGNumber(p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('width', width)\r\n  }\r\n\r\n  // write svgjs data to the dom\r\n  writeDataToDom () {\r\n    // remove previously set data\r\n    this.node.removeAttribute('svgjs:data')\r\n\r\n    if (Object.keys(this.dom).length) {\r\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\r\n    }\r\n\r\n    return super.writeDataToDom()\r\n  }\r\n\r\n  // Move over x-axis\r\n  x (x) {\r\n    return this.attr('x', x)\r\n  }\r\n\r\n  // Move over y-axis\r\n  y (y) {\r\n    return this.attr('y', y)\r\n  }\r\n}\r\n\r\nextend(Element, {\r\n  bbox, rbox, point, ctm, screenCTM\r\n})\r\n\r\nregister(Element, 'Element')\r\n", "import { on, off } from '../core/event.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Color from '../../types/Color.js'\r\nimport Element from '../../elements/Element.js'\r\nimport Matrix from '../../types/Matrix.js'\r\nimport Point from '../../types/Point.js'\r\nimport SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Define list of available attributes for stroke and fill\r\nvar sugar = {\r\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\r\n  fill: [ 'color', 'opacity', 'rule' ],\r\n  prefix: function (t, a) {\r\n    return a === 'color' ? t : t + '-' + a\r\n  }\r\n}\r\n\r\n// Add sugar for fill and stroke\r\n;[ 'fill', 'stroke' ].forEach(function (m) {\r\n  var extension = {}\r\n  var i\r\n\r\n  extension[m] = function (o) {\r\n    if (typeof o === 'undefined') {\r\n      return this.attr(m)\r\n    }\r\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\r\n      this.attr(m, o)\r\n    } else {\r\n      // set all attributes from sugar.fill and sugar.stroke list\r\n      for (i = sugar[m].length - 1; i >= 0; i--) {\r\n        if (o[sugar[m][i]] != null) {\r\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  registerMethods([ 'Element', 'Runner' ], extension)\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Let the user set the matrix directly\r\n  matrix: function (mat, b, c, d, e, f) {\r\n    // Act as a getter\r\n    if (mat == null) {\r\n      return new Matrix(this)\r\n    }\r\n\r\n    // Act as a setter, the user can pass a matrix or a set of numbers\r\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\r\n  },\r\n\r\n  // Map rotation to transform\r\n  rotate: function (angle, cx, cy) {\r\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map skew to transform\r\n  skew: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\r\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  shear: function (lam, cx, cy) {\r\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map scale to transform\r\n  scale: function (x, y, cx, cy) {\r\n    return arguments.length === 1 || arguments.length === 3\r\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\r\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\r\n  },\r\n\r\n  // Map translate to transform\r\n  translate: function (x, y) {\r\n    return this.transform({ translate: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map relative translations to transform\r\n  relative: function (x, y) {\r\n    return this.transform({ relative: [ x, y ] }, true)\r\n  },\r\n\r\n  // Map flip to transform\r\n  flip: function (direction, around) {\r\n    var directionString = typeof direction === 'string' ? direction\r\n      : isFinite(direction) ? 'both'\r\n      : 'both'\r\n    var origin = (direction === 'both' && isFinite(around)) ? [ around, around ]\r\n      : (direction === 'x') ? [ around, 0 ]\r\n      : (direction === 'y') ? [ 0, around ]\r\n      : isFinite(direction) ? [ direction, direction ]\r\n      : [ 0, 0 ]\r\n    return this.transform({ flip: directionString, origin: origin }, true)\r\n  },\r\n\r\n  // Opacity\r\n  opacity: function (value) {\r\n    return this.attr('opacity', value)\r\n  }\r\n})\r\n\r\nregisterMethods('radius', {\r\n  // Add x and y radius\r\n  radius: function (x, y) {\r\n    var type = (this._element || this).type\r\n    return type === 'radialGradient' || type === 'radialGradient'\r\n      ? this.attr('r', new SVGNumber(x))\r\n      : this.rx(x).ry(y == null ? x : y)\r\n  }\r\n})\r\n\r\nregisterMethods('Path', {\r\n  // Get path length\r\n  length: function () {\r\n    return this.node.getTotalLength()\r\n  },\r\n  // Get point at length\r\n  pointAt: function (length) {\r\n    return new Point(this.node.getPointAtLength(length))\r\n  }\r\n})\r\n\r\nregisterMethods([ 'Element', 'Runner' ], {\r\n  // Set font\r\n  font: function (a, v) {\r\n    if (typeof a === 'object') {\r\n      for (v in a) this.font(v, a[v])\r\n      return this\r\n    }\r\n\r\n    return a === 'leading'\r\n      ? this.leading(v)\r\n      : a === 'anchor'\r\n        ? this.attr('text-anchor', v)\r\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\r\n          ? this.attr('font-' + a, v)\r\n          : this.attr(a, v)\r\n  }\r\n})\r\n\r\nregisterMethods('Text', {\r\n  ax (x) {\r\n    return this.attr('x', x)\r\n  },\r\n  ay (y) {\r\n    return this.attr('y', y)\r\n  },\r\n  amove (x, y) {\r\n    return this.ax(x).ay(y)\r\n  }\r\n})\r\n\r\n// Add events to elements\r\nconst methods = [ 'click',\r\n  'dblclick',\r\n  'mousedown',\r\n  'mouseup',\r\n  'mouseover',\r\n  'mouseout',\r\n  'mousemove',\r\n  'mouseenter',\r\n  'mouseleave',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchleave',\r\n  'touchend',\r\n  'touchcancel' ].reduce(function (last, event) {\r\n  // add event to Element\r\n  const fn = function (f) {\r\n    if (f === null) {\r\n      off(this, event)\r\n    } else {\r\n      on(this, event, f)\r\n    }\r\n    return this\r\n  }\r\n\r\n  last[event] = fn\r\n  return last\r\n}, {})\r\n\r\nregisterMethods('Element', methods)\r\n", "import { getOrigin } from '../../utils/utils.js'\r\nimport { delimiter, transforms } from '../core/regex.js'\r\nimport { registerMethods } from '../../utils/methods.js'\r\nimport Matrix from '../../types/Matrix.js'\r\n\r\n// Reset all transformations\r\nexport function untransform () {\r\n  return this.attr('transform', null)\r\n}\r\n\r\n// merge the whole transformation chain into one matrix and returns it\r\nexport function matrixify () {\r\n  var matrix = (this.attr('transform') || '')\r\n    // split transformations\r\n    .split(transforms).slice(0, -1).map(function (str) {\r\n      // generate key => value pairs\r\n      var kv = str.trim().split('(')\r\n      return [ kv[0],\r\n        kv[1].split(delimiter)\r\n          .map(function (str) {\r\n            return parseFloat(str)\r\n          })\r\n      ]\r\n    })\r\n    .reverse()\r\n    // merge every transformation into one matrix\r\n    .reduce(function (matrix, transform) {\r\n      if (transform[0] === 'matrix') {\r\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\r\n      }\r\n      return matrix[transform[0]].apply(matrix, transform[1])\r\n    }, new Matrix())\r\n\r\n  return matrix\r\n}\r\n\r\n// add an element to another parent without changing the visual representation on the screen\r\nexport function toParent (parent) {\r\n  if (this === parent) return this\r\n  var ctm = this.screenCTM()\r\n  var pCtm = parent.screenCTM().inverse()\r\n\r\n  this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\r\n\r\n  return this\r\n}\r\n\r\n// same as above with parent equals root-svg\r\nexport function toRoot () {\r\n  return this.toParent(this.root())\r\n}\r\n\r\n// Add transformations\r\nexport function transform (o, relative) {\r\n  // Act as a getter if no object was passed\r\n  if (o == null || typeof o === 'string') {\r\n    var decomposed = new Matrix(this).decompose()\r\n    return o == null ? decomposed : decomposed[o]\r\n  }\r\n\r\n  if (!Matrix.isMatrixLike(o)) {\r\n    // Set the origin according to the defined transform\r\n    o = { ...o, origin: getOrigin(o, this) }\r\n  }\r\n\r\n  // The user can pass a boolean, an Element or an Matrix or nothing\r\n  var cleanRelative = relative === true ? this : (relative || false)\r\n  var result = new Matrix(cleanRelative).transform(o)\r\n  return this.attr('transform', result)\r\n}\r\n\r\nregisterMethods('Element', {\r\n  untransform, matrixify, toParent, toRoot, transform\r\n})\r\n", "import SVGNumber from '../../types/SVGNumber.js'\r\n\r\n// Radius x value\r\nexport function rx (rx) {\r\n  return this.attr('rx', rx)\r\n}\r\n\r\n// Radius y value\r\nexport function ry (ry) {\r\n  return this.attr('ry', ry)\r\n}\r\n\r\n// Move over x-axis\r\nexport function x (x) {\r\n  return x == null\r\n    ? this.cx() - this.rx()\r\n    : this.cx(x + this.rx())\r\n}\r\n\r\n// Move over y-axis\r\nexport function y (y) {\r\n  return y == null\r\n    ? this.cy() - this.ry()\r\n    : this.cy(y + this.ry())\r\n}\r\n\r\n// Move by center over x-axis\r\nexport function cx (x) {\r\n  return x == null\r\n    ? this.attr('cx')\r\n    : this.attr('cx', x)\r\n}\r\n\r\n// Move by center over y-axis\r\nexport function cy (y) {\r\n  return y == null\r\n    ? this.attr('cy')\r\n    : this.attr('cy', y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  return width == null\r\n    ? this.rx() * 2\r\n    : this.rx(new SVGNumber(width).divide(2))\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  return height == null\r\n    ? this.ry() * 2\r\n    : this.ry(new SVGNumber(height).divide(2))\r\n}\r\n", "import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Shape extends Element {}\r\n\r\nregister(Shape, 'Shape')\r\n", "import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\r\nimport {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Circle extends Shape {\r\n  constructor (node) {\r\n    super(nodeOrNew('circle', node), node)\r\n  }\r\n\r\n  radius (r) {\r\n    return this.attr('r', r)\r\n  }\r\n\r\n  // Radius x value\r\n  rx (rx) {\r\n    return this.attr('r', rx)\r\n  }\r\n\r\n  // Alias radius x value\r\n  ry (ry) {\r\n    return this.rx(ry)\r\n  }\r\n\r\n  size (size) {\r\n    return this.radius(new SVGNumber(size).divide(2))\r\n  }\r\n}\r\n\r\nextend(Circle, { x, y, cx, cy, width, height })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create circle element\r\n    circle: wrapWithAttrCheck(function (size) {\r\n      return this.put(new Circle())\r\n        .size(size)\r\n        .move(0, 0)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Circle, 'Circle')\r\n", "import { register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class Container extends Element {\r\n  flatten (parent) {\r\n    this.each(function () {\r\n      if (this instanceof Container) return this.flatten(parent).ungroup(parent)\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    // we need this so that the root does not get removed\r\n    this.node.firstElementChild || this.remove()\r\n\r\n    return this\r\n  }\r\n\r\n  ungroup (parent) {\r\n    parent = parent || this.parent()\r\n\r\n    this.each(function () {\r\n      return this.toParent(parent)\r\n    })\r\n\r\n    this.remove()\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Container, 'Container')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Defs extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('defs', node), node)\r\n  }\r\n\r\n  flatten () {\r\n    return this\r\n  }\n\r\n  ungroup () {\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Defs, 'Defs')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport * as circled from '../modules/core/circled.js'\r\n\r\nexport default class Ellipse extends Shape {\r\n  constructor (node) {\r\n    super(nodeOrNew('ellipse', node), node)\r\n  }\r\n\r\n  size (width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n\r\n    return this\r\n      .rx(new SVGNumber(p.width).divide(2))\r\n      .ry(new SVGNumber(p.height).divide(2))\r\n  }\r\n}\r\n\r\nextend(Ellipse, circled)\r\n\r\nregisterMethods('Container', {\r\n  // Create an ellipse\r\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\r\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\r\n  })\r\n})\r\n\r\nregister(Ellipse, 'Ellipse')\r\n", "import { nodeOrNew, register } from '../utils/adopter.js'\r\nimport Element from './Element.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\n\r\nexport default class Stop extends Element {\r\n  constructor (node) {\r\n    super(nodeOrNew('stop', node), node)\r\n  }\r\n\r\n  // add color stops\r\n  update (o) {\r\n    if (typeof o === 'number' || o instanceof SVGNumber) {\r\n      o = {\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      }\r\n    }\r\n\r\n    // set attributes\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregister(Stop, 'Stop')\r\n", "import SVGNumber from '../../types/SVGNumber.js'\r\n\r\nexport function from (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\r\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\r\n}\r\n\r\nexport function to (x, y) {\r\n  return (this._element || this).type === 'radialGradient'\r\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\r\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport Stop from './Stop.js'\r\nimport baseFind from '../modules/core/selector.js'\r\nimport * as gradiented from '../modules/core/gradiented.js'\r\n\r\nexport default class Gradient extends Container {\r\n  constructor (type, attrs) {\r\n    super(\r\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\r\n      attrs\r\n    )\r\n  }\r\n\r\n  // Add a color stop\r\n  stop (offset, color, opacity) {\r\n    return this.put(new Stop()).update(offset, color, opacity)\r\n  }\r\n\r\n  // Update gradient\r\n  update (block) {\r\n    // remove all stops\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\r\n\r\n  // Alias string convertion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'gradientTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n}\r\n\r\nextend(Gradient, gradiented)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create gradient element in defs\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.defs().gradient(type, block)\r\n    })\r\n  },\r\n  // define gradient\r\n  Defs: {\r\n    gradient: wrapWithAttrCheck(function (type, block) {\r\n      return this.put(new Gradient(type)).update(block)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Gradient, 'Gradient')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Box from '../types/Box.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Pattern extends Container {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('pattern', node), node)\r\n  }\r\n\r\n  // Return the fill id\r\n  url () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\r\n\r\n  // Update pattern by rebuilding\r\n  update (block) {\r\n    // remove content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Alias string convertion to fill\r\n  toString () {\r\n    return this.url()\r\n  }\r\n\r\n  // custom attr to handle transform\r\n  attr (a, b, c) {\r\n    if (a === 'transform') a = 'patternTransform'\r\n    return super.attr(a, b, c)\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [fill*=\"' + this.id() + '\"]')\r\n  }\r\n\r\n  bbox () {\r\n    return new Box()\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create pattern element in defs\r\n    pattern (...args) {\r\n      return this.defs().pattern(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    pattern: wrapWithAttrCheck(function (width, height, block) {\r\n      return this.put(new Pattern()).update(block).attr({\r\n        x: 0,\r\n        y: 0,\r\n        width: width,\r\n        height: height,\r\n        patternUnits: 'userSpaceOnUse'\r\n      })\r\n    })\r\n  }\r\n})\r\n\r\nregister(Pattern, 'Pattern')\r\n", "import { isImage } from '../modules/core/regex.js'\r\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { off, on } from '../modules/core/event.js'\r\nimport { registerAttrHook } from '../modules/core/attr.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Pattern from './Pattern.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Image extends Shape {\r\n  constructor (node) {\r\n    super(nodeOrNew('image', node), node)\r\n  }\r\n\r\n  // (re)load image\r\n  load (url, callback) {\r\n    if (!url) return this\r\n\r\n    var img = new globals.window.Image()\r\n\r\n    on(img, 'load', function (e) {\r\n      var p = this.parent(Pattern)\r\n\r\n      // ensure image size\r\n      if (this.width() === 0 && this.height() === 0) {\r\n        this.size(img.width, img.height)\r\n      }\r\n\r\n      if (p instanceof Pattern) {\r\n        // ensure pattern size if not set\r\n        if (p.width() === 0 && p.height() === 0) {\r\n          p.size(this.width(), this.height())\r\n        }\r\n      }\r\n\r\n      if (typeof callback === 'function') {\r\n        callback.call(this, e)\r\n      }\r\n    }, this)\r\n\r\n    on(img, 'load error', function () {\r\n      // dont forget to unbind memory leaking events\r\n      off(img)\r\n    })\r\n\r\n    return this.attr('href', (img.src = url), xlink)\r\n  }\r\n}\r\n\r\nregisterAttrHook(function (attr, val, _this) {\r\n  // convert image fill and stroke to patterns\r\n  if (attr === 'fill' || attr === 'stroke') {\r\n    if (isImage.test(val)) {\r\n      val = _this.root().defs().image(val)\r\n    }\r\n  }\r\n\r\n  if (val instanceof Image) {\r\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\r\n      pattern.add(val)\r\n    })\r\n  }\r\n\r\n  return val\r\n})\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // create image element, load image and set its size\r\n    image: wrapWithAttrCheck(function (source, callback) {\r\n      return this.put(new Image()).size(0, 0).load(source, callback)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Image, 'Image')\r\n", "import { delimiter } from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport { subClassArray } from './ArrayPolyfill.js'\r\nimport SVGArray from './SVGArray.js'\r\n\r\nconst PointArray = subClassArray('PointArray', SVGArray)\r\n\r\nexport default PointArray\r\n\r\nextend(PointArray, {\r\n  // Convert array to string\r\n  toString () {\r\n    // convert to a poly point string\r\n    for (var i = 0, il = this.length, array = []; i < il; i++) {\r\n      array.push(this[i].join(','))\r\n    }\r\n\r\n    return array.join(' ')\r\n  },\r\n\r\n  // Convert array to line object\r\n  toLine () {\r\n    return {\r\n      x1: this[0][0],\r\n      y1: this[0][1],\r\n      x2: this[1][0],\r\n      y2: this[1][1]\r\n    }\r\n  },\r\n\r\n  // Get morphed array at given position\r\n  at (pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    // generate morphed point string\r\n    for (var i = 0, il = this.length, array = []; i < il; i++) {\r\n      array.push([\r\n        this[i][0] + (this.destination[i][0] - this[i][0]) * pos,\r\n        this[i][1] + (this.destination[i][1] - this[i][1]) * pos\r\n      ])\r\n    }\r\n\r\n    return new PointArray(array)\r\n  },\r\n\r\n  // Parse point string and flat array\r\n  parse (array = [ [ 0, 0 ] ]) {\r\n    var points = []\r\n\r\n    // if it is an array\r\n    if (array instanceof Array) {\r\n      // and it is not flat, there is no need to parse it\r\n      if (array[0] instanceof Array) {\r\n        return array\r\n      }\r\n    } else { // Else, it is considered as a string\r\n      // parse points\r\n      array = array.trim().split(delimiter).map(parseFloat)\r\n    }\r\n\r\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\r\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\r\n    if (array.length % 2 !== 0) array.pop()\r\n\r\n    // wrap points in two-tuples\r\n    for (var i = 0, len = array.length; i < len; i = i + 2) {\r\n      points.push([ array[i], array[i + 1] ])\r\n    }\r\n\r\n    return points\r\n  },\r\n\r\n  // transform points with matrix (similar to Point.transform)\r\n  transform (m) {\r\n    const points = []\r\n\r\n    for (let i = 0; i < this.length; i++) {\r\n      const point = this[i]\r\n      // Perform the matrix multiplication\r\n      points.push([\r\n        m.a * point[0] + m.c * point[1] + m.e,\r\n        m.b * point[0] + m.d * point[1] + m.f\r\n      ])\r\n    }\r\n\r\n    // Return the required point\r\n    return new PointArray(points)\r\n  },\r\n\r\n  // Move point string\r\n  move (x, y) {\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    // move every point\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      for (var i = this.length - 1; i >= 0; i--) {\r\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\r\n      }\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Resize poly string\r\n  size (width, height) {\r\n    var i\r\n    var box = this.bbox()\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\r\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Get bounding box of points\r\n  bbox () {\r\n    var maxX = -Infinity\r\n    var maxY = -Infinity\r\n    var minX = Infinity\r\n    var minY = Infinity\r\n    this.forEach(function (el) {\r\n      maxX = Math.max(el[0], maxX)\r\n      maxY = Math.max(el[1], maxY)\r\n      minX = Math.min(el[0], minX)\r\n      minY = Math.min(el[1], minY)\r\n    })\r\n    return { x: minX, y: minY, width: maxX - minX, height: maxY - minY }\r\n  }\r\n})\r\n", "import PointArray from '../../types/PointArray.js'\r\n\r\nexport const MorphArray = PointArray\r\n\r\n// Move by left top corner over x-axis\r\nexport function x (x) {\r\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n}\r\n\r\n// Move by left top corner over y-axis\r\nexport function y (y) {\r\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n}\r\n\r\n// Set width of element\r\nexport function width (width) {\r\n  const b = this.bbox()\r\n  return width == null ? b.width : this.size(width, b.height)\r\n}\r\n\r\n// Set height of element\r\nexport function height (height) {\r\n  const b = this.bbox()\r\n  return height == null ? b.height : this.size(b.width, height)\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\n\r\nexport default class Line extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('line', node), node)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return new PointArray([\r\n      [ this.attr('x1'), this.attr('y1') ],\r\n      [ this.attr('x2'), this.attr('y2') ]\r\n    ])\r\n  }\r\n\r\n  // Overwrite native plot() method\r\n  plot (x1, y1, x2, y2) {\r\n    if (x1 == null) {\r\n      return this.array()\r\n    } else if (typeof y1 !== 'undefined') {\r\n      x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\r\n    } else {\r\n      x1 = new PointArray(x1).toLine()\r\n    }\r\n\r\n    return this.attr(x1)\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr(this.array().move(x, y).toLine())\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n    return this.attr(this.array().size(p.width, p.height).toLine())\r\n  }\r\n}\r\n\r\nextend(Line, pointed)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a line element\r\n    line: wrapWithAttrCheck(function (...args) {\r\n      // make sure plot is called as a setter\r\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\r\n      return Line.prototype.plot.apply(\r\n        this.put(new Line())\r\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\r\n      )\r\n    })\r\n  }\r\n})\r\n\r\nregister(Line, 'Line')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Marker extends Container {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('marker', node), node)\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return this.attr('markerWidth', width)\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return this.attr('markerHeight', height)\r\n  }\r\n\r\n  // Set marker refX and refY\r\n  ref (x, y) {\r\n    return this.attr('refX', x).attr('refY', y)\r\n  }\r\n\r\n  // Update marker\r\n  update (block) {\r\n    // remove all content\r\n    this.clear()\r\n\r\n    // invoke passed block\r\n    if (typeof block === 'function') {\r\n      block.call(this, this)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Return the fill id\r\n  toString () {\r\n    return 'url(#' + this.id() + ')'\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    marker (...args) {\r\n      // Create marker element in defs\r\n      return this.defs().marker(...args)\r\n    }\r\n  },\r\n  Defs: {\r\n    // Create marker\r\n    marker: wrapWithAttrCheck(function (width, height, block) {\r\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\r\n      return this.put(new Marker())\r\n        .size(width, height)\r\n        .ref(width / 2, height / 2)\r\n        .viewbox(0, 0, width, height)\r\n        .attr('orient', 'auto')\r\n        .update(block)\r\n    })\r\n  },\r\n  marker: {\r\n    // Create and attach markers\r\n    marker (marker, width, height, block) {\r\n      var attr = [ 'marker' ]\r\n\r\n      // Build attribute name\r\n      if (marker !== 'all') attr.push(marker)\r\n      attr = attr.join('-')\r\n\r\n      // Set marker attribute\r\n      marker = arguments[1] instanceof Marker\r\n        ? arguments[1]\r\n        : this.defs().marker(width, height, block)\r\n\r\n      return this.attr(attr, marker)\r\n    }\r\n  }\r\n})\r\n\r\nregister(Marker, 'Marker')\r\n", "import { timeline } from '../modules/core/defaults.js'\r\nimport { extend } from '../utils/adopter.js'\r\n\r\n/***\r\nBase Class\r\n==========\r\nThe base stepper class that will be\r\n***/\r\n\r\nfunction makeSetterGetter (k, f) {\r\n  return function (v) {\r\n    if (v == null) return this[v]\r\n    this[k] = v\r\n    if (f) f.call(this)\r\n    return this\r\n  }\r\n}\r\n\r\nexport const easing = {\r\n  '-': function (pos) {\r\n    return pos\r\n  },\r\n  '<>': function (pos) {\r\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\r\n  },\r\n  '>': function (pos) {\r\n    return Math.sin(pos * Math.PI / 2)\r\n  },\r\n  '<': function (pos) {\r\n    return -Math.cos(pos * Math.PI / 2) + 1\r\n  },\r\n  bezier: function (x1, y1, x2, y2) {\r\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\r\n    return function (t) {\r\n      if (t < 0) {\r\n        if (x1 > 0) {\r\n          return y1 / x1 * t\r\n        } else if (x2 > 0) {\r\n          return y2 / x2 * t\r\n        } else {\r\n          return 0\r\n        }\r\n      } else if (t > 1) {\r\n        if (x2 < 1) {\r\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\r\n        } else if (x1 < 1) {\r\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\r\n        } else {\r\n          return 1\r\n        }\r\n      } else {\r\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\r\n      }\r\n    }\r\n  },\r\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\r\n  steps: function (steps, stepPosition = 'end') {\r\n    // deal with \"jump-\" prefix\r\n    stepPosition = stepPosition.split('-').reverse()[0]\r\n\r\n    let jumps = steps\r\n    if (stepPosition === 'none') {\r\n      --jumps\r\n    } else if (stepPosition === 'both') {\r\n      ++jumps\r\n    }\r\n\r\n    // The beforeFlag is essentially useless\r\n    return (t, beforeFlag = false) => {\r\n      // Step is called currentStep in referenced url\r\n      let step = Math.floor(t * steps)\r\n      const jumping = (t * step) % 1 === 0\r\n\r\n      if (stepPosition === 'start' || stepPosition === 'both') {\r\n        ++step\r\n      }\r\n\r\n      if (beforeFlag && jumping) {\r\n        --step\r\n      }\r\n\r\n      if (t >= 0 && step < 0) {\r\n        step = 0\r\n      }\r\n\r\n      if (t <= 1 && step > jumps) {\r\n        step = jumps\r\n      }\r\n\r\n      return step / jumps\r\n    }\r\n  }\r\n}\r\n\r\nexport class Stepper {\r\n  done () {\r\n    return false\r\n  }\r\n}\r\n\r\n/***\r\nEasing Functions\r\n================\r\n***/\r\n\r\nexport class Ease extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.ease = easing[fn || timeline.ease] || fn\r\n  }\r\n\r\n  step (from, to, pos) {\r\n    if (typeof from !== 'number') {\r\n      return pos < 1 ? from : to\r\n    }\r\n    return from + (to - from) * this.ease(pos)\r\n  }\r\n}\r\n\r\n/***\r\nController Types\r\n================\r\n***/\r\n\r\nexport class Controller extends Stepper {\r\n  constructor (fn) {\r\n    super()\r\n    this.stepper = fn\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    return this.stepper(current, target, dt, c)\r\n  }\r\n\r\n  done (c) {\r\n    return c.done\r\n  }\r\n}\r\n\r\nfunction recalculate () {\r\n  // Apply the default parameters\r\n  var duration = (this._duration || 500) / 1000\r\n  var overshoot = this._overshoot || 0\r\n\r\n  // Calculate the PID natural response\r\n  var eps = 1e-10\r\n  var pi = Math.PI\r\n  var os = Math.log(overshoot / 100 + eps)\r\n  var zeta = -os / Math.sqrt(pi * pi + os * os)\r\n  var wn = 3.9 / (zeta * duration)\r\n\r\n  // Calculate the Spring values\r\n  this.d = 2 * zeta * wn\r\n  this.k = wn * wn\r\n}\r\n\r\nexport class Spring extends Controller {\r\n  constructor (duration, overshoot) {\r\n    super()\r\n    this.duration(duration || 500)\r\n      .overshoot(overshoot || 0)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    if (dt > 100) dt = 16\r\n\r\n    dt /= 1000\r\n\r\n    // Get the previous velocity\r\n    var velocity = c.velocity || 0\r\n\r\n    // Apply the control to get the new position and store it\r\n    var acceleration = -this.d * velocity - this.k * (current - target)\r\n    var newPosition = current\r\n      + velocity * dt\r\n      + acceleration * dt * dt / 2\r\n\r\n    // Store the velocity\r\n    c.velocity = velocity + acceleration * dt\r\n\r\n    // Figure out if we have converged, and if so, pass the value\r\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\r\n    return c.done ? target : newPosition\r\n  }\r\n}\r\n\r\nextend(Spring, {\r\n  duration: makeSetterGetter('_duration', recalculate),\r\n  overshoot: makeSetterGetter('_overshoot', recalculate)\r\n})\r\n\r\nexport class PID extends Controller {\r\n  constructor (p, i, d, windup) {\r\n    super()\r\n\r\n    p = p == null ? 0.1 : p\r\n    i = i == null ? 0.01 : i\r\n    d = d == null ? 0 : d\r\n    windup = windup == null ? 1000 : windup\r\n    this.p(p).i(i).d(d).windup(windup)\r\n  }\r\n\r\n  step (current, target, dt, c) {\r\n    if (typeof current === 'string') return current\r\n    c.done = dt === Infinity\r\n\r\n    if (dt === Infinity) return target\r\n    if (dt === 0) return current\r\n\r\n    var p = target - current\r\n    var i = (c.integral || 0) + p * dt\r\n    var d = (p - (c.error || 0)) / dt\r\n    var windup = this.windup\r\n\r\n    // antiwindup\r\n    if (windup !== false) {\r\n      i = Math.max(-windup, Math.min(i, windup))\r\n    }\r\n\r\n    c.error = p\r\n    c.integral = i\r\n\r\n    c.done = Math.abs(p) < 0.001\r\n\r\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\r\n  }\r\n}\r\n\r\nextend(PID, {\r\n  windup: makeSetterGetter('windup'),\r\n  p: makeSetterGetter('P'),\r\n  i: makeSetterGetter('I'),\r\n  d: makeSetterGetter('D')\r\n})\r\n", "import {\r\n  delimiter,\r\n  dots,\r\n  hyphen,\r\n  isPathLetter,\r\n  numbersWithDots,\r\n  pathLetters\r\n} from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport { subClassArray } from './ArrayPolyfill.js'\r\nimport Point from './Point.js'\r\nimport SVGArray from './SVGArray.js'\r\nimport parser from '../modules/core/parser.js'\r\n\r\nconst PathArray = subClassArray('PathArray', SVGArray)\r\n\r\nexport default PathArray\r\n\r\nexport function pathRegReplace (a, b, c, d) {\r\n  return c + d.replace(dots, ' .')\r\n}\r\n\r\nfunction arrayToString (a) {\r\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\r\n    s += a[i][0]\r\n\r\n    if (a[i][1] != null) {\r\n      s += a[i][1]\r\n\r\n      if (a[i][2] != null) {\r\n        s += ' '\r\n        s += a[i][2]\r\n\r\n        if (a[i][3] != null) {\r\n          s += ' '\r\n          s += a[i][3]\r\n          s += ' '\r\n          s += a[i][4]\r\n\r\n          if (a[i][5] != null) {\r\n            s += ' '\r\n            s += a[i][5]\r\n            s += ' '\r\n            s += a[i][6]\r\n\r\n            if (a[i][7] != null) {\r\n              s += ' '\r\n              s += a[i][7]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return s + ' '\r\n}\r\n\r\nconst pathHandlers = {\r\n  M: function (c, p, p0) {\r\n    p.x = p0.x = c[0]\r\n    p.y = p0.y = c[1]\r\n\r\n    return [ 'M', p.x, p.y ]\r\n  },\r\n  L: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'L', c[0], c[1] ]\r\n  },\r\n  H: function (c, p) {\r\n    p.x = c[0]\r\n    return [ 'H', c[0] ]\r\n  },\r\n  V: function (c, p) {\r\n    p.y = c[0]\r\n    return [ 'V', c[0] ]\r\n  },\r\n  C: function (c, p) {\r\n    p.x = c[4]\r\n    p.y = c[5]\r\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\r\n  },\r\n  S: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'S', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  Q: function (c, p) {\r\n    p.x = c[2]\r\n    p.y = c[3]\r\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\r\n  },\r\n  T: function (c, p) {\r\n    p.x = c[0]\r\n    p.y = c[1]\r\n    return [ 'T', c[0], c[1] ]\r\n  },\r\n  Z: function (c, p, p0) {\r\n    p.x = p0.x\r\n    p.y = p0.y\r\n    return [ 'Z' ]\r\n  },\r\n  A: function (c, p) {\r\n    p.x = c[5]\r\n    p.y = c[6]\r\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\r\n  }\r\n}\r\n\r\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\r\n\r\nfor (var i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\r\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\r\n    return function (c, p, p0) {\r\n      if (i === 'H') c[0] = c[0] + p.x\r\n      else if (i === 'V') c[0] = c[0] + p.y\r\n      else if (i === 'A') {\r\n        c[5] = c[5] + p.x\r\n        c[6] = c[6] + p.y\r\n      } else {\r\n        for (var j = 0, jl = c.length; j < jl; ++j) {\r\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\r\n        }\r\n      }\r\n\r\n      return pathHandlers[i](c, p, p0)\r\n    }\r\n  })(mlhvqtcsaz[i].toUpperCase())\r\n}\r\n\r\nextend(PathArray, {\r\n  // Convert array to string\r\n  toString () {\r\n    return arrayToString(this)\r\n  },\r\n\r\n  // Move path string\r\n  move (x, y) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n\r\n    // get relative offset\r\n    x -= box.x\r\n    y -= box.y\r\n\r\n    if (!isNaN(x) && !isNaN(y)) {\r\n      // move every point\r\n      for (var l, i = this.length - 1; i >= 0; i--) {\r\n        l = this[i][0]\r\n\r\n        if (l === 'M' || l === 'L' || l === 'T') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n        } else if (l === 'H') {\r\n          this[i][1] += x\r\n        } else if (l === 'V') {\r\n          this[i][1] += y\r\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n          this[i][1] += x\r\n          this[i][2] += y\r\n          this[i][3] += x\r\n          this[i][4] += y\r\n\r\n          if (l === 'C') {\r\n            this[i][5] += x\r\n            this[i][6] += y\r\n          }\r\n        } else if (l === 'A') {\r\n          this[i][6] += x\r\n          this[i][7] += y\r\n        }\r\n      }\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Resize path string\r\n  size (width, height) {\r\n    // get bounding box of current situation\r\n    var box = this.bbox()\r\n    var i, l\r\n\r\n    // If the box width or height is 0 then we ignore\r\n    // transformations on the respective axis\r\n    box.width = box.width === 0 ? 1 : box.width\r\n    box.height = box.height === 0 ? 1 : box.height\r\n\r\n    // recalculate position of all points according to new size\r\n    for (i = this.length - 1; i >= 0; i--) {\r\n      l = this[i][0]\r\n\r\n      if (l === 'M' || l === 'L' || l === 'T') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'H') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n      } else if (l === 'V') {\r\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\r\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\r\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\r\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\r\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\r\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\r\n\r\n        if (l === 'C') {\r\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\r\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\r\n        }\r\n      } else if (l === 'A') {\r\n        // resize radii\r\n        this[i][1] = (this[i][1] * width) / box.width\r\n        this[i][2] = (this[i][2] * height) / box.height\r\n\r\n        // move position values\r\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\r\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\r\n      }\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Test if the passed path array use the same path data commands as this path array\r\n  equalCommands (pathArray) {\r\n    var i, il, equalCommands\r\n\r\n    pathArray = new PathArray(pathArray)\r\n\r\n    equalCommands = this.length === pathArray.length\r\n    for (i = 0, il = this.length; equalCommands && i < il; i++) {\r\n      equalCommands = this[i][0] === pathArray[i][0]\r\n    }\r\n\r\n    return equalCommands\r\n  },\r\n\r\n  // Make path array morphable\r\n  morph (pathArray) {\r\n    pathArray = new PathArray(pathArray)\r\n\r\n    if (this.equalCommands(pathArray)) {\r\n      this.destination = pathArray\r\n    } else {\r\n      this.destination = null\r\n    }\r\n\r\n    return this\r\n  },\r\n\r\n  // Get morphed path array at given position\r\n  at (pos) {\r\n    // make sure a destination is defined\r\n    if (!this.destination) return this\r\n\r\n    var sourceArray = this\r\n    var destinationArray = this.destination.value\r\n    var array = []\r\n    var pathArray = new PathArray()\r\n    var i, il, j, jl\r\n\r\n    // Animate has specified in the SVG spec\r\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\r\n    for (i = 0, il = sourceArray.length; i < il; i++) {\r\n      array[i] = [ sourceArray[i][0] ]\r\n      for (j = 1, jl = sourceArray[i].length; j < jl; j++) {\r\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\r\n      }\r\n      // For the two flags of the elliptical arc command, the SVG spec say:\r\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\r\n      // Elliptical arc command as an array followed by corresponding indexes:\r\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\r\n      //   0    1   2        3                 4             5      6  7\r\n      if (array[i][0] === 'A') {\r\n        array[i][4] = +(array[i][4] !== 0)\r\n        array[i][5] = +(array[i][5] !== 0)\r\n      }\r\n    }\r\n\r\n    // Directly modify the value of a path array, this is done this way for performance\r\n    pathArray.value = array\r\n    return pathArray\r\n  },\r\n\r\n  // Absolutize and parse path to array\r\n  parse (array = [ [ 'M', 0, 0 ] ]) {\r\n    // if it's already a patharray, no need to parse it\r\n    if (array instanceof PathArray) return array\r\n\r\n    // prepare for parsing\r\n    var s\r\n    var paramCnt = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\r\n\r\n    if (typeof array === 'string') {\r\n      array = array\r\n        .replace(numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\r\n        .replace(pathLetters, ' $& ') // put some room between letters and numbers\r\n        .replace(hyphen, '$1 -') // add space before hyphen\r\n        .trim() // trim\r\n        .split(delimiter) // split into array\r\n    } else {\r\n      array = array.reduce(function (prev, curr) {\r\n        return [].concat.call(prev, curr)\r\n      }, [])\r\n    }\r\n\r\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\r\n    var result = []\r\n    var p = new Point()\r\n    var p0 = new Point()\r\n    var index = 0\r\n    var len = array.length\r\n\r\n    do {\r\n      // Test if we have a path letter\r\n      if (isPathLetter.test(array[index])) {\r\n        s = array[index]\r\n        ++index\r\n        // If last letter was a move command and we got no new, it defaults to [L]ine\r\n      } else if (s === 'M') {\r\n        s = 'L'\r\n      } else if (s === 'm') {\r\n        s = 'l'\r\n      }\r\n\r\n      result.push(pathHandlers[s].call(null,\r\n        array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\r\n        p, p0\r\n      )\r\n      )\r\n    } while (len > index)\r\n\r\n    return result\r\n  },\r\n\r\n  // Get bounding box of path\r\n  bbox () {\r\n    parser().path.setAttribute('d', this.toString())\r\n    return parser.nodes.path.getBBox()\r\n  }\r\n})\r\n", "import { Ease } from './Controller.js'\r\nimport {\r\n  delimiter,\r\n  numberAndUnit,\r\n  pathLetters\r\n} from '../modules/core/regex.js'\r\nimport { extend } from '../utils/adopter.js'\r\nimport Color from '../types/Color.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport SVGArray from '../types/SVGArray.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\n\r\nexport default class Morphable {\r\n  constructor (stepper) {\r\n    this._stepper = stepper || new Ease('-')\r\n\r\n    this._from = null\r\n    this._to = null\r\n    this._type = null\r\n    this._context = null\r\n    this._morphObj = null\r\n  }\r\n\r\n  from (val) {\r\n    if (val == null) {\r\n      return this._from\r\n    }\r\n\r\n    this._from = this._set(val)\r\n    return this\r\n  }\r\n\r\n  to (val) {\r\n    if (val == null) {\r\n      return this._to\r\n    }\r\n\r\n    this._to = this._set(val)\r\n    return this\r\n  }\r\n\r\n  type (type) {\r\n    // getter\r\n    if (type == null) {\r\n      return this._type\r\n    }\r\n\r\n    // setter\r\n    this._type = type\r\n    return this\r\n  }\r\n\r\n  _set (value) {\r\n    if (!this._type) {\r\n      var type = typeof value\r\n\r\n      if (type === 'number') {\r\n        this.type(SVGNumber)\r\n      } else if (type === 'string') {\r\n        if (Color.isColor(value)) {\r\n          this.type(Color)\r\n        } else if (delimiter.test(value)) {\r\n          this.type(pathLetters.test(value)\r\n            ? PathArray\r\n            : SVGArray\r\n          )\r\n        } else if (numberAndUnit.test(value)) {\r\n          this.type(SVGNumber)\r\n        } else {\r\n          this.type(NonMorphable)\r\n        }\r\n      } else if (morphableTypes.indexOf(value.constructor) > -1) {\r\n        this.type(value.constructor)\r\n      } else if (Array.isArray(value)) {\r\n        this.type(SVGArray)\r\n      } else if (type === 'object') {\r\n        this.type(ObjectBag)\r\n      } else {\r\n        this.type(NonMorphable)\r\n      }\r\n    }\r\n\r\n    var result = (new this._type(value))\r\n    if (this._type === Color) {\r\n      result = this._to ? result[this._to[4]]()\r\n        : this._from ? result[this._from[4]]()\r\n        : result\r\n    }\r\n    result = result.toArray()\r\n\r\n    this._morphObj = this._morphObj || new this._type()\r\n    this._context = this._context\r\n      || Array.apply(null, Array(result.length))\r\n        .map(Object)\r\n        .map(function (o) {\r\n          o.done = true\r\n          return o\r\n        })\r\n    return result\r\n  }\r\n\r\n  stepper (stepper) {\r\n    if (stepper == null) return this._stepper\r\n    this._stepper = stepper\r\n    return this\r\n  }\r\n\r\n  done () {\r\n    var complete = this._context\r\n      .map(this._stepper.done)\r\n      .reduce(function (last, curr) {\r\n        return last && curr\r\n      }, true)\r\n    return complete\r\n  }\r\n\r\n  at (pos) {\r\n    var _this = this\r\n\r\n    return this._morphObj.fromArray(\r\n      this._from.map(function (i, index) {\r\n        return _this._stepper.step(i, _this._to[index], pos, _this._context[index], _this._context)\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport class NonMorphable {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (val) {\r\n    val = Array.isArray(val) ? val[0] : val\r\n    this.value = val\r\n    return this\r\n  }\r\n\r\n  valueOf () {\r\n    return this.value\r\n  }\r\n\r\n  toArray () {\r\n    return [ this.value ]\r\n  }\r\n}\r\n\r\nexport class TransformBag {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (obj) {\r\n    if (Array.isArray(obj)) {\r\n      obj = {\r\n        scaleX: obj[0],\r\n        scaleY: obj[1],\r\n        shear: obj[2],\r\n        rotate: obj[3],\r\n        translateX: obj[4],\r\n        translateY: obj[5],\r\n        originX: obj[6],\r\n        originY: obj[7]\r\n      }\r\n    }\r\n\r\n    Object.assign(this, TransformBag.defaults, obj)\r\n    return this\r\n  }\r\n\r\n  toArray () {\r\n    var v = this\r\n\r\n    return [\r\n      v.scaleX,\r\n      v.scaleY,\r\n      v.shear,\r\n      v.rotate,\r\n      v.translateX,\r\n      v.translateY,\r\n      v.originX,\r\n      v.originY\r\n    ]\r\n  }\r\n}\r\n\r\nTransformBag.defaults = {\r\n  scaleX: 1,\r\n  scaleY: 1,\r\n  shear: 0,\r\n  rotate: 0,\r\n  translateX: 0,\r\n  translateY: 0,\r\n  originX: 0,\r\n  originY: 0\r\n}\r\n\r\nexport class ObjectBag {\r\n  constructor (...args) {\r\n    this.init(...args)\r\n  }\r\n\r\n  init (objOrArr) {\r\n    this.values = []\r\n\r\n    if (Array.isArray(objOrArr)) {\r\n      this.values = objOrArr\r\n      return\r\n    }\r\n\r\n    objOrArr = objOrArr || {}\r\n    var entries = []\r\n\r\n    for (const i in objOrArr) {\r\n      entries.push([ i, objOrArr[i] ])\r\n    }\r\n\r\n    entries.sort((a, b) => {\r\n      return a[0] - b[0]\r\n    })\r\n\r\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\r\n    return this\r\n  }\r\n\r\n  valueOf () {\r\n    var obj = {}\r\n    var arr = this.values\r\n\r\n    for (var i = 0, len = arr.length; i < len; i += 2) {\r\n      obj[arr[i]] = arr[i + 1]\r\n    }\r\n\r\n    return obj\r\n  }\r\n\r\n  toArray () {\r\n    return this.values\r\n  }\r\n}\r\n\r\nconst morphableTypes = [\r\n  NonMorphable,\r\n  TransformBag,\r\n  ObjectBag\r\n]\r\n\r\nexport function registerMorphableType (type = []) {\r\n  morphableTypes.push(...[].concat(type))\r\n}\r\n\r\nexport function makeMorphable () {\r\n  extend(morphableTypes, {\r\n    to (val) {\r\n      return new Morphable()\r\n        .type(this.constructor)\r\n        .from(this.valueOf())\r\n        .to(val)\r\n    },\r\n    fromArray (arr) {\r\n      this.init(arr)\r\n      return this\r\n    }\r\n  })\r\n}\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Shape from './Shape.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Path extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('path', node), node)\r\n  }\r\n\r\n  // Get array\r\n  array () {\r\n    return this._array || (this._array = new PathArray(this.attr('d')))\r\n  }\r\n\r\n  // Plot new path\r\n  plot (d) {\r\n    return (d == null) ? this.array()\r\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\r\n  }\r\n\r\n  // Clear array cache\r\n  clear () {\r\n    delete this._array\r\n    return this\r\n  }\r\n\r\n  // Move by left top corner\r\n  move (x, y) {\r\n    return this.attr('d', this.array().move(x, y))\r\n  }\r\n\r\n  // Move by left top corner over x-axis\r\n  x (x) {\r\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\r\n  }\r\n\r\n  // Move by left top corner over y-axis\r\n  y (y) {\r\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\r\n  }\r\n\r\n  // Set element size to given width and height\r\n  size (width, height) {\r\n    var p = proportionalSize(this, width, height)\r\n    return this.attr('d', this.array().size(p.width, p.height))\r\n  }\r\n\r\n  // Set width of element\r\n  width (width) {\r\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\r\n  }\r\n\r\n  // Set height of element\r\n  height (height) {\r\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg textpath [href*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\n// Define morphable array\r\nPath.prototype.MorphArray = PathArray\r\n\r\n// Add parent method\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped path element\r\n    path: wrapWithAttrCheck(function (d) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Path()).plot(d || new PathArray())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Path, 'Path')\r\n", "import { proportionalSize } from '../../utils/utils.js'\r\nimport PointArray from '../../types/PointArray.js'\r\n\r\n// Get array\r\nexport function array () {\r\n  return this._array || (this._array = new PointArray(this.attr('points')))\r\n}\r\n\r\n// Plot new path\r\nexport function plot (p) {\r\n  return (p == null) ? this.array()\r\n    : this.clear().attr('points', typeof p === 'string' ? p\r\n    : (this._array = new PointArray(p)))\r\n}\r\n\r\n// Clear array cache\r\nexport function clear () {\r\n  delete this._array\r\n  return this\r\n}\r\n\r\n// Move by left top corner\r\nexport function move (x, y) {\r\n  return this.attr('points', this.array().move(x, y))\r\n}\r\n\r\n// Set element size to given width and height\r\nexport function size (width, height) {\r\n  const p = proportionalSize(this, width, height)\r\n  return this.attr('points', this.array().size(p.width, p.height))\r\n}\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polygon extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('polygon', node), node)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polygon: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polygon()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polygon, pointed)\r\nextend(Polygon, poly)\r\nregister(Polygon, 'Polygon')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport PointArray from '../types/PointArray.js'\r\nimport Shape from './Shape.js'\r\nimport * as pointed from '../modules/core/pointed.js'\r\nimport * as poly from '../modules/core/poly.js'\r\n\r\nexport default class Polyline extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('polyline', node), node)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a wrapped polygon element\r\n    polyline: wrapWithAttrCheck(function (p) {\r\n      // make sure plot is called as a setter\r\n      return this.put(new Polyline()).plot(p || new PointArray())\r\n    })\r\n  }\r\n})\r\n\r\nextend(Polyline, pointed)\r\nextend(Polyline, poly)\r\nregister(Polyline, 'Polyline')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Rect extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('rect', node), node)\r\n  }\r\n}\r\n\r\nextend(Rect, { rx, ry })\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a rect element\r\n    rect: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new Rect()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Rect, 'Rect')\r\n", "export default class Queue {\r\n  constructor () {\r\n    this._first = null\r\n    this._last = null\r\n  }\r\n\r\n  push (value) {\r\n    // An item stores an id and the provided value\r\n    var item = value.next ? value : { value: value, next: null, prev: null }\r\n\r\n    // Deal with the queue being empty or populated\r\n    if (this._last) {\r\n      item.prev = this._last\r\n      this._last.next = item\r\n      this._last = item\r\n    } else {\r\n      this._last = item\r\n      this._first = item\r\n    }\r\n\r\n    // Return the current item\r\n    return item\r\n  }\r\n\r\n  shift () {\r\n    // Check if we have a value\r\n    var remove = this._first\r\n    if (!remove) return null\r\n\r\n    // If we do, remove it and relink things\r\n    this._first = remove.next\r\n    if (this._first) this._first.prev = null\r\n    this._last = this._first ? this._last : null\r\n    return remove.value\r\n  }\r\n\r\n  // Shows us the first item in the list\r\n  first () {\r\n    return this._first && this._first.value\r\n  }\r\n\r\n  // Shows us the last item in the list\r\n  last () {\r\n    return this._last && this._last.value\r\n  }\r\n\r\n  // Removes the item that was returned from the push\r\n  remove (item) {\r\n    // Relink the previous item\r\n    if (item.prev) item.prev.next = item.next\r\n    if (item.next) item.next.prev = item.prev\r\n    if (item === this._last) this._last = item.prev\r\n    if (item === this._first) this._first = item.next\r\n\r\n    // Invalidate item\r\n    item.prev = null\r\n    item.next = null\r\n  }\r\n}\r\n", "import { globals } from '../utils/window.js'\r\nimport Queue from './Queue.js'\r\n\r\nconst Animator = {\r\n  nextDraw: null,\r\n  frames: new Queue(),\r\n  timeouts: new Queue(),\r\n  immediates: new Queue(),\r\n  timer: () => globals.window.performance || globals.window.Date,\r\n  transforms: [],\r\n\r\n  frame (fn) {\r\n    // Store the node\r\n    var node = Animator.frames.push({ run: fn })\r\n\r\n    // Request an animation frame if we don't have one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    // Return the node so we can remove it easily\r\n    return node\r\n  },\r\n\r\n  timeout (fn, delay) {\r\n    delay = delay || 0\r\n\r\n    // Work out when the event should fire\r\n    var time = Animator.timer().now() + delay\r\n\r\n    // Add the timeout to the end of the queue\r\n    var node = Animator.timeouts.push({ run: fn, time: time })\r\n\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  immediate (fn) {\r\n    // Add the immediate fn to the end of the queue\r\n    var node = Animator.immediates.push(fn)\r\n    // Request another animation frame if we need one\r\n    if (Animator.nextDraw === null) {\r\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\r\n    }\r\n\r\n    return node\r\n  },\r\n\r\n  cancelFrame (node) {\r\n    node != null && Animator.frames.remove(node)\r\n  },\r\n\r\n  clearTimeout (node) {\r\n    node != null && Animator.timeouts.remove(node)\r\n  },\r\n\r\n  cancelImmediate (node) {\r\n    node != null && Animator.immediates.remove(node)\r\n  },\r\n\r\n  _draw (now) {\r\n    // Run all the timeouts we can run, if they are not ready yet, add them\r\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\r\n    var nextTimeout = null\r\n    var lastTimeout = Animator.timeouts.last()\r\n    while ((nextTimeout = Animator.timeouts.shift())) {\r\n      // Run the timeout if its time, or push it to the end\r\n      if (now >= nextTimeout.time) {\r\n        nextTimeout.run()\r\n      } else {\r\n        Animator.timeouts.push(nextTimeout)\r\n      }\r\n\r\n      // If we hit the last item, we should stop shifting out more items\r\n      if (nextTimeout === lastTimeout) break\r\n    }\r\n\r\n    // Run all of the animation frames\r\n    var nextFrame = null\r\n    var lastFrame = Animator.frames.last()\r\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\r\n      nextFrame.run(now)\r\n    }\r\n\r\n    var nextImmediate = null\r\n    while ((nextImmediate = Animator.immediates.shift())) {\r\n      nextImmediate()\r\n    }\r\n\r\n    // If we have remaining timeouts or frames, draw until we don't anymore\r\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\r\n      ? globals.window.requestAnimationFrame(Animator._draw)\r\n      : null\r\n  }\r\n}\r\n\r\nexport default Animator\r\n", "import { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Animator from './Animator.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\n\r\nvar makeSchedule = function (runnerInfo) {\r\n  var start = runnerInfo.start\r\n  var duration = runnerInfo.runner.duration()\r\n  var end = start + duration\r\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\r\n}\r\n\r\nconst defaultSource = function () {\r\n  const w = globals.window\r\n  return (w.performance || w.Date).now()\r\n}\r\n\r\nexport default class Timeline extends EventTarget {\r\n  // Construct a new timeline on the given element\r\n  constructor (timeSource = defaultSource) {\r\n    super()\r\n\r\n    this._timeSource = timeSource\r\n\r\n    // Store the timing variables\r\n    this._startTime = 0\r\n    this._speed = 1.0\r\n\r\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\r\n    this._persist = 0\r\n\r\n    // Keep track of the running animations and their starting parameters\r\n    this._nextFrame = null\r\n    this._paused = true\r\n    this._runners = []\r\n    this._runnerIds = []\r\n    this._lastRunnerId = -1\r\n    this._time = 0\r\n    this._lastSourceTime = 0\r\n    this._lastStepTime = 0\r\n\r\n    // Make sure that step is always called in class context\r\n    this._step = this._stepFn.bind(this, false)\r\n    this._stepImmediate = this._stepFn.bind(this, true)\r\n  }\r\n\r\n  // schedules a runner on the timeline\r\n  schedule (runner, delay, when) {\r\n    if (runner == null) {\r\n      return this._runners.map(makeSchedule)\r\n    }\r\n\r\n    // The start time for the next animation can either be given explicitly,\r\n    // derived from the current timeline time or it can be relative to the\r\n    // last start time to chain animations direclty\r\n\r\n    var absoluteStartTime = 0\r\n    var endTime = this.getEndTime()\r\n    delay = delay || 0\r\n\r\n    // Work out when to start the animation\r\n    if (when == null || when === 'last' || when === 'after') {\r\n      // Take the last time and increment\r\n      absoluteStartTime = endTime\r\n    } else if (when === 'absolute' || when === 'start') {\r\n      absoluteStartTime = delay\r\n      delay = 0\r\n    } else if (when === 'now') {\r\n      absoluteStartTime = this._time\r\n    } else if (when === 'relative') {\r\n      const runnerInfo = this._runners[runner.id]\r\n      if (runnerInfo) {\r\n        absoluteStartTime = runnerInfo.start + delay\r\n        delay = 0\r\n      }\r\n    } else {\r\n      throw new Error('Invalid value for the \"when\" parameter')\r\n    }\r\n\r\n    // Manage runner\r\n    runner.unschedule()\r\n    runner.timeline(this)\r\n\r\n    const persist = runner.persist()\r\n    const runnerInfo = {\r\n      persist: persist === null ? this._persist : persist,\r\n      start: absoluteStartTime + delay,\r\n      runner\r\n    }\r\n\r\n    this._lastRunnerId = runner.id\r\n\r\n    this._runners.push(runnerInfo)\r\n    this._runners.sort((a, b) => a.start - b.start)\r\n    this._runnerIds = this._runners.map(info => info.runner.id)\r\n\r\n    this.updateTime()._continue()\r\n    return this\r\n  }\r\n\r\n  // Remove the runner from this timeline\r\n  unschedule (runner) {\r\n    var index = this._runnerIds.indexOf(runner.id)\r\n    if (index < 0) return this\r\n\r\n    this._runners.splice(index, 1)\r\n    this._runnerIds.splice(index, 1)\r\n\r\n    runner.timeline(null)\r\n    return this\r\n  }\r\n\r\n  // Calculates the end of the timeline\r\n  getEndTime () {\r\n    var lastRunnerInfo = this._runners[this._runnerIds.indexOf(this._lastRunnerId)]\r\n    var lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\r\n    var lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : 0\r\n    return lastStartTime + lastDuration\r\n  }\r\n\r\n  getEndTimeOfTimeline () {\r\n    let lastEndTime = 0\r\n    for (var i = 0; i < this._runners.length; i++) {\r\n      const runnerInfo = this._runners[i]\r\n      var duration = runnerInfo ? runnerInfo.runner.duration() : 0\r\n      var startTime = runnerInfo ? runnerInfo.start : 0\r\n      const endTime = startTime + duration\r\n      if (endTime > lastEndTime) {\r\n        lastEndTime = endTime\r\n      }\r\n    }\r\n    return lastEndTime\r\n  }\r\n\r\n  // Makes sure, that after pausing the time doesn't jump\r\n  updateTime () {\r\n    if (!this.active()) {\r\n      this._lastSourceTime = this._timeSource()\r\n    }\r\n    return this\r\n  }\r\n\r\n  play () {\r\n    // Now make sure we are not paused and continue the animation\r\n    this._paused = false\r\n    return this.updateTime()._continue()\r\n  }\r\n\r\n  pause () {\r\n    this._paused = true\r\n    return this._continue()\r\n  }\r\n\r\n  stop () {\r\n    // Go to start and pause\r\n    this.time(0)\r\n    return this.pause()\r\n  }\r\n\r\n  finish () {\r\n    // Go to end and pause\r\n    this.time(this.getEndTimeOfTimeline() + 1)\r\n    return this.pause()\r\n  }\r\n\r\n  speed (speed) {\r\n    if (speed == null) return this._speed\r\n    this._speed = speed\r\n    return this\r\n  }\r\n\r\n  reverse (yes) {\r\n    var currentSpeed = this.speed()\r\n    if (yes == null) return this.speed(-currentSpeed)\r\n\r\n    var positive = Math.abs(currentSpeed)\r\n    return this.speed(yes ? positive : -positive)\r\n  }\r\n\r\n  seek (dt) {\r\n    return this.time(this._time + dt)\r\n  }\r\n\r\n  time (time) {\r\n    if (time == null) return this._time\r\n    this._time = time\r\n    return this._continue(true)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  source (fn) {\r\n    if (fn == null) return this._timeSource\r\n    this._timeSource = fn\r\n    return this\r\n  }\r\n\r\n  _stepFn (immediateStep = false) {\r\n    // Get the time delta from the last time and update the time\r\n    var time = this._timeSource()\r\n    var dtSource = time - this._lastSourceTime\r\n\r\n    if (immediateStep) dtSource = 0\r\n\r\n    var dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\r\n    this._lastSourceTime = time\r\n\r\n    // Only update the time if we use the timeSource.\r\n    // Otherwise use the current time\r\n    if (!immediateStep) {\r\n      // Update the time\r\n      this._time += dtTime\r\n      this._time = this._time < 0 ? 0 : this._time\r\n    }\r\n    this._lastStepTime = this._time\r\n    this.fire('time', this._time)\r\n\r\n    // This is for the case that the timeline was seeked so that the time\r\n    // is now before the startTime of the runner. Thats why we need to set\r\n    // the runner to position 0\r\n\r\n    // FIXME:\r\n    // However, reseting in insertion order leads to bugs. Considering the case,\r\n    // where 2 runners change the same attriute but in different times,\r\n    // reseting both of them will lead to the case where the later defined\r\n    // runner always wins the reset even if the other runner started earlier\r\n    // and therefore should win the attribute battle\r\n    // this can be solved by reseting them backwards\r\n    for (var k = this._runners.length; k--;) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[k]\r\n      const runner = runnerInfo.runner\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      // and try to reset it\r\n      if (dtToStart <= 0) {\r\n        runner.reset()\r\n      }\r\n    }\r\n\r\n    // Run all of the runners directly\r\n    var runnersLeft = false\r\n    for (var i = 0, len = this._runners.length; i < len; i++) {\r\n      // Get and run the current runner and ignore it if its inactive\r\n      const runnerInfo = this._runners[i]\r\n      const runner = runnerInfo.runner\r\n      let dt = dtTime\r\n\r\n      // Make sure that we give the actual difference\r\n      // between runner start time and now\r\n      const dtToStart = this._time - runnerInfo.start\r\n\r\n      // Dont run runner if not started yet\r\n      if (dtToStart <= 0) {\r\n        runnersLeft = true\r\n        continue\r\n      } else if (dtToStart < dt) {\r\n        // Adjust dt to make sure that animation is on point\r\n        dt = dtToStart\r\n      }\r\n\r\n      if (!runner.active()) continue\r\n\r\n      // If this runner is still going, signal that we need another animation\r\n      // frame, otherwise, remove the completed runner\r\n      var finished = runner.step(dt).done\r\n      if (!finished) {\r\n        runnersLeft = true\r\n        // continue\r\n      } else if (runnerInfo.persist !== true) {\r\n        // runner is finished. And runner might get removed\r\n        var endTime = runner.duration() - runner.time() + this._time\r\n\r\n        if (endTime + runnerInfo.persist < this._time) {\r\n          // Delete runner and correct index\r\n          runner.unschedule()\r\n          --i\r\n          --len\r\n        }\r\n      }\r\n    }\r\n\r\n    // Basically: we continue when there are runners right from us in time\r\n    // when -->, and when runners are left from us when <--\r\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\r\n      this._continue()\r\n    } else {\r\n      this.pause()\r\n      this.fire('finished')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Checks if we are running and continues the animation\r\n  _continue (immediateStep = false) {\r\n    Animator.cancelFrame(this._nextFrame)\r\n    this._nextFrame = null\r\n\r\n    if (immediateStep) return this._stepImmediate()\r\n    if (this._paused) return this\r\n\r\n    this._nextFrame = Animator.frame(this._step)\r\n    return this\r\n  }\r\n\r\n  active () {\r\n    return !!this._nextFrame\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    timeline: function (timeline) {\r\n      if (timeline == null) {\r\n        this._timeline = (this._timeline || new Timeline())\r\n        return this._timeline\r\n      } else {\r\n        this._timeline = timeline\r\n        return this\r\n      }\r\n    }\r\n  }\r\n})\r\n", "import { Controller, Ease, Stepper } from './Controller.js'\r\nimport { extend, register } from '../utils/adopter.js'\r\nimport { from, to } from '../modules/core/gradiented.js'\r\nimport { getOrigin } from '../utils/utils.js'\r\nimport { noop, timeline } from '../modules/core/defaults.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { rx, ry } from '../modules/core/circled.js'\r\nimport Animator from './Animator.js'\r\nimport Box from '../types/Box.js'\r\nimport EventTarget from '../types/EventTarget.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Morphable, { TransformBag } from './Morphable.js'\r\nimport Point from '../types/Point.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Timeline from './Timeline.js'\r\n\r\nexport default class Runner extends EventTarget {\r\n  constructor (options) {\r\n    super()\r\n\r\n    // Store a unique id on the runner, so that we can identify it later\r\n    this.id = Runner.id++\r\n\r\n    // Ensure a default value\r\n    options = options == null\r\n      ? timeline.duration\r\n      : options\r\n\r\n    // Ensure that we get a controller\r\n    options = typeof options === 'function'\r\n      ? new Controller(options)\r\n      : options\r\n\r\n    // Declare all of the variables\r\n    this._element = null\r\n    this._timeline = null\r\n    this.done = false\r\n    this._queue = []\r\n\r\n    // Work out the stepper and the duration\r\n    this._duration = typeof options === 'number' && options\r\n    this._isDeclarative = options instanceof Controller\r\n    this._stepper = this._isDeclarative ? options : new Ease()\r\n\r\n    // We copy the current values from the timeline because they can change\r\n    this._history = {}\r\n\r\n    // Store the state of the runner\r\n    this.enabled = true\r\n    this._time = 0\r\n    this._lastTime = 0\r\n\r\n    // At creation, the runner is in reseted state\r\n    this._reseted = true\r\n\r\n    // Save transforms applied to this runner\r\n    this.transforms = new Matrix()\r\n    this.transformId = 1\r\n\r\n    // Looping variables\r\n    this._haveReversed = false\r\n    this._reverse = false\r\n    this._loopsDone = 0\r\n    this._swing = false\r\n    this._wait = 0\r\n    this._times = 1\r\n\r\n    this._frameId = null\r\n\r\n    // Stores how long a runner is stored after beeing done\r\n    this._persist = this._isDeclarative ? true : null\r\n  }\r\n\r\n  /*\r\n  Runner Definitions\r\n  ==================\r\n  These methods help us define the runtime behaviour of the Runner or they\r\n  help us make new runners from the current runner\r\n  */\r\n\r\n  element (element) {\r\n    if (element == null) return this._element\r\n    this._element = element\r\n    element._prepareRunner()\r\n    return this\r\n  }\r\n\r\n  timeline (timeline) {\r\n    // check explicitly for undefined so we can set the timeline to null\r\n    if (typeof timeline === 'undefined') return this._timeline\r\n    this._timeline = timeline\r\n    return this\r\n  }\r\n\r\n  animate (duration, delay, when) {\r\n    var o = Runner.sanitise(duration, delay, when)\r\n    var runner = new Runner(o.duration)\r\n    if (this._timeline) runner.timeline(this._timeline)\r\n    if (this._element) runner.element(this._element)\r\n    return runner.loop(o).schedule(o.delay, o.when)\r\n  }\r\n\r\n  schedule (timeline, delay, when) {\r\n    // The user doesn't need to pass a timeline if we already have one\r\n    if (!(timeline instanceof Timeline)) {\r\n      when = delay\r\n      delay = timeline\r\n      timeline = this.timeline()\r\n    }\r\n\r\n    // If there is no timeline, yell at the user...\r\n    if (!timeline) {\r\n      throw Error('Runner cannot be scheduled without timeline')\r\n    }\r\n\r\n    // Schedule the runner on the timeline provided\r\n    timeline.schedule(this, delay, when)\r\n    return this\r\n  }\r\n\r\n  unschedule () {\r\n    var timeline = this.timeline()\r\n    timeline && timeline.unschedule(this)\r\n    return this\r\n  }\r\n\r\n  loop (times, swing, wait) {\r\n    // Deal with the user passing in an object\r\n    if (typeof times === 'object') {\r\n      swing = times.swing\r\n      wait = times.wait\r\n      times = times.times\r\n    }\r\n\r\n    // Sanitise the values and store them\r\n    this._times = times || Infinity\r\n    this._swing = swing || false\r\n    this._wait = wait || 0\r\n\r\n    // Allow true to be passed\r\n    if (this._times === true) { this._times = Infinity }\r\n\r\n    return this\r\n  }\r\n\r\n  delay (delay) {\r\n    return this.animate(0, delay)\r\n  }\r\n\r\n  /*\r\n  Basic Functionality\r\n  ===================\r\n  These methods allow us to attach basic functions to the runner directly\r\n  */\r\n\r\n  queue (initFn, runFn, retargetFn, isTransform) {\r\n    this._queue.push({\r\n      initialiser: initFn || noop,\r\n      runner: runFn || noop,\r\n      retarget: retargetFn,\r\n      isTransform: isTransform,\r\n      initialised: false,\r\n      finished: false\r\n    })\r\n    var timeline = this.timeline()\r\n    timeline && this.timeline()._continue()\r\n    return this\r\n  }\r\n\r\n  during (fn) {\r\n    return this.queue(null, fn)\r\n  }\r\n\r\n  after (fn) {\r\n    return this.on('finished', fn)\r\n  }\r\n\r\n  /*\r\n  Runner animation methods\r\n  ========================\r\n  Control how the animation plays\r\n  */\r\n\r\n  time (time) {\r\n    if (time == null) {\r\n      return this._time\r\n    }\r\n    const dt = time - this._time\r\n    this.step(dt)\r\n    return this\r\n  }\r\n\r\n  duration () {\r\n    return this._times * (this._wait + this._duration) - this._wait\r\n  }\r\n\r\n  loops (p) {\r\n    var loopDuration = this._duration + this._wait\r\n    if (p == null) {\r\n      var loopsDone = Math.floor(this._time / loopDuration)\r\n      var relativeTime = (this._time - loopsDone * loopDuration)\r\n      var position = relativeTime / this._duration\r\n      return Math.min(loopsDone + position, this._times)\r\n    }\r\n    var whole = Math.floor(p)\r\n    var partial = p % 1\r\n    var time = loopDuration * whole + this._duration * partial\r\n    return this.time(time)\r\n  }\r\n\r\n  persist (dtOrForever) {\r\n    if (dtOrForever == null) return this._persist\r\n    this._persist = dtOrForever\r\n    return this\r\n  }\r\n\r\n  position (p) {\r\n    // Get all of the variables we need\r\n    var x = this._time\r\n    var d = this._duration\r\n    var w = this._wait\r\n    var t = this._times\r\n    var s = this._swing\r\n    var r = this._reverse\r\n    var position\r\n\r\n    if (p == null) {\r\n      /*\r\n      This function converts a time to a position in the range [0, 1]\r\n      The full explanation can be found in this desmos demonstration\r\n        https://www.desmos.com/calculator/u4fbavgche\r\n      The logic is slightly simplified here because we can use booleans\r\n      */\r\n\r\n      // Figure out the value without thinking about the start or end time\r\n      const f = function (x) {\r\n        var swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\r\n        var backwards = (swinging && !r) || (!swinging && r)\r\n        var uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\r\n        var clipped = Math.max(Math.min(uncliped, 1), 0)\r\n        return clipped\r\n      }\r\n\r\n      // Figure out the value by incorporating the start time\r\n      var endTime = t * (w + d) - w\r\n      position = x <= 0 ? Math.round(f(1e-5))\r\n        : x < endTime ? f(x)\r\n        : Math.round(f(endTime - 1e-5))\r\n      return position\r\n    }\r\n\r\n    // Work out the loops done and add the position to the loops done\r\n    var loopsDone = Math.floor(this.loops())\r\n    var swingForward = s && (loopsDone % 2 === 0)\r\n    var forwards = (swingForward && !r) || (r && swingForward)\r\n    position = loopsDone + (forwards ? p : 1 - p)\r\n    return this.loops(position)\r\n  }\r\n\r\n  progress (p) {\r\n    if (p == null) {\r\n      return Math.min(1, this._time / this.duration())\r\n    }\r\n    return this.time(p * this.duration())\r\n  }\r\n\r\n  step (dt) {\r\n    // If we are inactive, this stepper just gets skipped\r\n    if (!this.enabled) return this\r\n\r\n    // Update the time and get the new position\r\n    dt = dt == null ? 16 : dt\r\n    this._time += dt\r\n    var position = this.position()\r\n\r\n    // Figure out if we need to run the stepper in this frame\r\n    var running = this._lastPosition !== position && this._time >= 0\r\n    this._lastPosition = position\r\n\r\n    // Figure out if we just started\r\n    var duration = this.duration()\r\n    var justStarted = this._lastTime <= 0 && this._time > 0\r\n    var justFinished = this._lastTime < duration && this._time >= duration\r\n\r\n    this._lastTime = this._time\r\n    if (justStarted) {\r\n      this.fire('start', this)\r\n    }\r\n\r\n    // Work out if the runner is finished set the done flag here so animations\r\n    // know, that they are running in the last step (this is good for\r\n    // transformations which can be merged)\r\n    var declarative = this._isDeclarative\r\n    this.done = !declarative && !justFinished && this._time >= duration\r\n\r\n    // Runner is running. So its not in reseted state anymore\r\n    this._reseted = false\r\n\r\n    // Call initialise and the run function\r\n    if (running || declarative) {\r\n      this._initialise(running)\r\n\r\n      // clear the transforms on this runner so they dont get added again and again\r\n      this.transforms = new Matrix()\r\n      var converged = this._run(declarative ? dt : position)\r\n\r\n      this.fire('step', this)\r\n    }\r\n    // correct the done flag here\r\n    // declaritive animations itself know when they converged\r\n    this.done = this.done || (converged && declarative)\r\n    if (justFinished) {\r\n      this.fire('finished', this)\r\n    }\r\n    return this\r\n  }\r\n\r\n  reset () {\r\n    if (this._reseted) return this\r\n    this.time(0)\r\n    this._reseted = true\r\n    return this\r\n  }\r\n\r\n  finish () {\r\n    return this.step(Infinity)\r\n  }\r\n\r\n  reverse (reverse) {\r\n    this._reverse = reverse == null ? !this._reverse : reverse\r\n    return this\r\n  }\r\n\r\n  ease (fn) {\r\n    this._stepper = new Ease(fn)\r\n    return this\r\n  }\r\n\r\n  active (enabled) {\r\n    if (enabled == null) return this.enabled\r\n    this.enabled = enabled\r\n    return this\r\n  }\r\n\r\n  /*\r\n  Private Methods\r\n  ===============\r\n  Methods that shouldn't be used externally\r\n  */\r\n\r\n  // Save a morpher to the morpher list so that we can retarget it later\r\n  _rememberMorpher (method, morpher) {\r\n    this._history[method] = {\r\n      morpher: morpher,\r\n      caller: this._queue[this._queue.length - 1]\r\n    }\r\n\r\n    // We have to resume the timeline in case a controller\r\n    // is already done without beeing ever run\r\n    // This can happen when e.g. this is done:\r\n    //    anim = el.animate(new SVG.Spring)\r\n    // and later\r\n    //    anim.move(...)\r\n    if (this._isDeclarative) {\r\n      var timeline = this.timeline()\r\n      timeline && timeline.play()\r\n    }\r\n  }\r\n\r\n  // Try to set the target for a morpher if the morpher exists, otherwise\r\n  // do nothing and return false\r\n  _tryRetarget (method, target, extra) {\r\n    if (this._history[method]) {\r\n      // if the last method wasnt even initialised, throw it away\r\n      if (!this._history[method].caller.initialised) {\r\n        const index = this._queue.indexOf(this._history[method].caller)\r\n        this._queue.splice(index, 1)\r\n        return false\r\n      }\r\n\r\n      // for the case of transformations, we use the special retarget function\r\n      // which has access to the outer scope\r\n      if (this._history[method].caller.retarget) {\r\n        this._history[method].caller.retarget(target, extra)\r\n        // for everything else a simple morpher change is sufficient\r\n      } else {\r\n        this._history[method].morpher.to(target)\r\n      }\r\n\r\n      this._history[method].caller.finished = false\r\n      var timeline = this.timeline()\r\n      timeline && timeline.play()\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  // Run each initialise function in the runner if required\r\n  _initialise (running) {\r\n    // If we aren't running, we shouldn't initialise when not declarative\r\n    if (!running && !this._isDeclarative) return\r\n\r\n    // Loop through all of the initialisers\r\n    for (var i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current initialiser\r\n      var current = this._queue[i]\r\n\r\n      // Determine whether we need to initialise\r\n      var needsIt = this._isDeclarative || (!current.initialised && running)\r\n      running = !current.finished\r\n\r\n      // Call the initialiser if we need to\r\n      if (needsIt && running) {\r\n        current.initialiser.call(this)\r\n        current.initialised = true\r\n      }\r\n    }\r\n  }\r\n\r\n  // Run each run function for the position or dt given\r\n  _run (positionOrDt) {\r\n    // Run all of the _queue directly\r\n    var allfinished = true\r\n    for (var i = 0, len = this._queue.length; i < len; ++i) {\r\n      // Get the current function to run\r\n      var current = this._queue[i]\r\n\r\n      // Run the function if its not finished, we keep track of the finished\r\n      // flag for the sake of declarative _queue\r\n      var converged = current.runner.call(this, positionOrDt)\r\n      current.finished = current.finished || (converged === true)\r\n      allfinished = allfinished && current.finished\r\n    }\r\n\r\n    // We report when all of the constructors are finished\r\n    return allfinished\r\n  }\r\n\r\n  addTransform (transform, index) {\r\n    this.transforms.lmultiplyO(transform)\r\n    return this\r\n  }\r\n\r\n  clearTransform () {\r\n    this.transforms = new Matrix()\r\n    return this\r\n  }\r\n\r\n  // TODO: Keep track of all transformations so that deletion is faster\r\n  clearTransformsFromQueue () {\r\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\r\n      this._queue = this._queue.filter((item) => {\r\n        return !item.isTransform\r\n      })\r\n    }\r\n  }\r\n\r\n  static sanitise (duration, delay, when) {\r\n    // Initialise the default parameters\r\n    var times = 1\r\n    var swing = false\r\n    var wait = 0\r\n    duration = duration || timeline.duration\r\n    delay = delay || timeline.delay\r\n    when = when || 'last'\r\n\r\n    // If we have an object, unpack the values\r\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\r\n      delay = duration.delay || delay\r\n      when = duration.when || when\r\n      swing = duration.swing || swing\r\n      times = duration.times || times\r\n      wait = duration.wait || wait\r\n      duration = duration.duration || timeline.duration\r\n    }\r\n\r\n    return {\r\n      duration: duration,\r\n      delay: delay,\r\n      swing: swing,\r\n      times: times,\r\n      wait: wait,\r\n      when: when\r\n    }\r\n  }\r\n}\r\n\r\nRunner.id = 0\r\n\r\nclass FakeRunner {\r\n  constructor (transforms = new Matrix(), id = -1, done = true) {\r\n    this.transforms = transforms\r\n    this.id = id\r\n    this.done = done\r\n  }\r\n\r\n  clearTransformsFromQueue () { }\r\n}\r\n\r\nextend([ Runner, FakeRunner ], {\r\n  mergeWith (runner) {\r\n    return new FakeRunner(\r\n      runner.transforms.lmultiply(this.transforms),\r\n      runner.id\r\n    )\r\n  }\r\n})\r\n\r\n// FakeRunner.emptyRunner = new FakeRunner()\r\n\r\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\r\nconst getRunnerTransform = (runner) => runner.transforms\r\n\r\nfunction mergeTransforms () {\r\n  // Find the matrix to apply to the element and apply it\r\n  const runners = this._transformationRunners.runners\r\n  const netTransform = runners\r\n    .map(getRunnerTransform)\r\n    .reduce(lmultiply, new Matrix())\r\n\r\n  this.transform(netTransform)\r\n\r\n  this._transformationRunners.merge()\r\n\r\n  if (this._transformationRunners.length() === 1) {\r\n    this._frameId = null\r\n  }\r\n}\r\n\r\nclass RunnerArray {\r\n  constructor () {\r\n    this.runners = []\r\n    this.ids = []\r\n  }\r\n\r\n  add (runner) {\r\n    if (this.runners.includes(runner)) return\r\n    const id = runner.id + 1\r\n\r\n    this.runners.push(runner)\r\n    this.ids.push(id)\r\n\r\n    return this\r\n  }\r\n\r\n  getByID (id) {\r\n    return this.runners[this.ids.indexOf(id + 1)]\r\n  }\r\n\r\n  remove (id) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1)\r\n    this.runners.splice(index, 1)\r\n    return this\r\n  }\r\n\r\n  merge () {\r\n    let lastRunner = null\r\n    this.runners.forEach((runner, i) => {\r\n\r\n      const condition = lastRunner\r\n        && runner.done && lastRunner.done\r\n        // don't merge runner when persisted on timeline\r\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\r\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\r\n\r\n      if (condition) {\r\n        // the +1 happens in the function\r\n        this.remove(runner.id)\r\n        this.edit(lastRunner.id, runner.mergeWith(lastRunner))\r\n      }\r\n\r\n      lastRunner = runner\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  edit (id, newRunner) {\r\n    const index = this.ids.indexOf(id + 1)\r\n    this.ids.splice(index, 1, id + 1)\r\n    this.runners.splice(index, 1, newRunner)\r\n    return this\r\n  }\r\n\r\n  length () {\r\n    return this.ids.length\r\n  }\r\n\r\n  clearBefore (id) {\r\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\r\n    this.ids.splice(0, deleteCnt, 0)\r\n    this.runners.splice(0, deleteCnt, new FakeRunner())\r\n      .forEach((r) => r.clearTransformsFromQueue())\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Element: {\r\n    animate (duration, delay, when) {\r\n      var o = Runner.sanitise(duration, delay, when)\r\n      var timeline = this.timeline()\r\n      return new Runner(o.duration)\r\n        .loop(o)\r\n        .element(this)\r\n        .timeline(timeline.play())\r\n        .schedule(o.delay, o.when)\r\n    },\r\n\r\n    delay (by, when) {\r\n      return this.animate(0, by, when)\r\n    },\r\n\r\n    // this function searches for all runners on the element and deletes the ones\r\n    // which run before the current one. This is because absolute transformations\r\n    // overwfrite anything anyway so there is no need to waste time computing\r\n    // other runners\r\n    _clearTransformRunnersBefore (currentRunner) {\r\n      this._transformationRunners.clearBefore(currentRunner.id)\r\n    },\r\n\r\n    _currentTransform (current) {\r\n      return this._transformationRunners.runners\r\n        // we need the equal sign here to make sure, that also transformations\r\n        // on the same runner which execute before the current transformation are\r\n        // taken into account\r\n        .filter((runner) => runner.id <= current.id)\r\n        .map(getRunnerTransform)\r\n        .reduce(lmultiply, new Matrix())\r\n    },\r\n\r\n    _addRunner (runner) {\r\n      this._transformationRunners.add(runner)\r\n\r\n      // Make sure that the runner merge is executed at the very end of\r\n      // all Animator functions. Thats why we use immediate here to execute\r\n      // the merge right after all frames are run\r\n      Animator.cancelImmediate(this._frameId)\r\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\r\n    },\r\n\r\n    _prepareRunner () {\r\n      if (this._frameId == null) {\r\n        this._transformationRunners = new RunnerArray()\r\n          .add(new FakeRunner(new Matrix(this)))\r\n      }\r\n    }\r\n  }\r\n})\r\n\r\nextend(Runner, {\r\n  attr (a, v) {\r\n    return this.styleAttr('attr', a, v)\r\n  },\r\n\r\n  // Add animatable styles\r\n  css (s, v) {\r\n    return this.styleAttr('css', s, v)\r\n  },\r\n\r\n  styleAttr (type, name, val) {\r\n    // apply attributes individually\r\n    if (typeof name === 'object') {\r\n      for (var key in name) {\r\n        this.styleAttr(type, key, name[key])\r\n      }\r\n      return this\r\n    }\r\n\r\n    var morpher = new Morphable(this._stepper).to(val)\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element()[type](name))\r\n    }, function (pos) {\r\n      this.element()[type](name, morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    return this\r\n  },\r\n\r\n  zoom (level, point) {\r\n    if (this._tryRetarget('zoom', to, point)) return this\r\n\r\n    var morpher = new Morphable(this._stepper).to(new SVGNumber(level))\r\n\r\n    this.queue(function () {\r\n      morpher = morpher.from(this.element().zoom())\r\n    }, function (pos) {\r\n      this.element().zoom(morpher.at(pos), point)\r\n      return morpher.done()\r\n    }, function (newLevel, newPoint) {\r\n      point = newPoint\r\n      morpher.to(newLevel)\r\n    })\r\n\r\n    this._rememberMorpher('zoom', morpher)\r\n    return this\r\n  },\r\n\r\n  /**\r\n   ** absolute transformations\r\n   **/\r\n\r\n  //\r\n  // M v -----|-----(D M v = F v)------|----->  T v\r\n  //\r\n  // 1. define the final state (T) and decompose it (once)\r\n  //    t = [tx, ty, the, lam, sy, sx]\r\n  // 2. on every frame: pull the current state of all previous transforms\r\n  //    (M - m can change)\r\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\r\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\r\n  //   - Note F(0) = M\r\n  //   - Note F(1) = T\r\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\r\n\r\n  transform (transforms, relative, affine) {\r\n    // If we have a declarative function, we should retarget it if possible\r\n    relative = transforms.relative || relative\r\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\r\n      return this\r\n    }\r\n\r\n    // Parse the parameters\r\n    var isMatrix = Matrix.isMatrixLike(transforms)\r\n    affine = transforms.affine != null\r\n      ? transforms.affine\r\n      : (affine != null ? affine : !isMatrix)\r\n\r\n    // Create a morepher and set its type\r\n    const morpher = new Morphable(this._stepper)\r\n      .type(affine ? TransformBag : Matrix)\r\n\r\n    let origin\r\n    let element\r\n    let current\r\n    let currentAngle\r\n    let startTransform\r\n\r\n    function setup () {\r\n      // make sure element and origin is defined\r\n      element = element || this.element()\r\n      origin = origin || getOrigin(transforms, element)\r\n\r\n      startTransform = new Matrix(relative ? undefined : element)\r\n\r\n      // add the runner to the element so it can merge transformations\r\n      element._addRunner(this)\r\n\r\n      // Deactivate all transforms that have run so far if we are absolute\r\n      if (!relative) {\r\n        element._clearTransformRunnersBefore(this)\r\n      }\r\n    }\r\n\r\n    function run (pos) {\r\n      // clear all other transforms before this in case something is saved\r\n      // on this runner. We are absolute. We dont need these!\r\n      if (!relative) this.clearTransform()\r\n\r\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\r\n\r\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\r\n      let start = this._isDeclarative && current\r\n        ? current\r\n        : startTransform\r\n\r\n      if (affine) {\r\n        target = target.decompose(x, y)\r\n        start = start.decompose(x, y)\r\n\r\n        // Get the current and target angle as it was set\r\n        const rTarget = target.rotate\r\n        const rCurrent = start.rotate\r\n\r\n        // Figure out the shortest path to rotate directly\r\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\r\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\r\n        const shortest = Math.min(...distances)\r\n        const index = distances.indexOf(shortest)\r\n        target.rotate = possibilities[index]\r\n      }\r\n\r\n      if (relative) {\r\n        // we have to be careful here not to overwrite the rotation\r\n        // with the rotate method of Matrix\r\n        if (!isMatrix) {\r\n          target.rotate = transforms.rotate || 0\r\n        }\r\n        if (this._isDeclarative && currentAngle) {\r\n          start.rotate = currentAngle\r\n        }\r\n      }\r\n\r\n      morpher.from(start)\r\n      morpher.to(target)\r\n\r\n      const affineParameters = morpher.at(pos)\r\n      currentAngle = affineParameters.rotate\r\n      current = new Matrix(affineParameters)\r\n\r\n      this.addTransform(current)\r\n      element._addRunner(this)\r\n      return morpher.done()\r\n    }\r\n\r\n    function retarget (newTransforms) {\r\n      // only get a new origin if it changed since the last call\r\n      if (\r\n        (newTransforms.origin || 'center').toString()\r\n        !== (transforms.origin || 'center').toString()\r\n      ) {\r\n        origin = getOrigin(transforms, element)\r\n      }\r\n\r\n      // overwrite the old transformations with the new ones\r\n      transforms = { ...newTransforms, origin }\r\n    }\r\n\r\n    this.queue(setup, run, retarget, true)\r\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\r\n    return this\r\n  },\r\n\r\n  // Animatable x-axis\r\n  x (x, relative) {\r\n    return this._queueNumber('x', x)\r\n  },\r\n\r\n  // Animatable y-axis\r\n  y (y) {\r\n    return this._queueNumber('y', y)\r\n  },\r\n\r\n  dx (x = 0) {\r\n    return this._queueNumberDelta('x', x)\r\n  },\r\n\r\n  dy (y = 0) {\r\n    return this._queueNumberDelta('y', y)\r\n  },\r\n\r\n  dmove (x, y) {\r\n    return this.dx(x).dy(y)\r\n  },\r\n\r\n  _queueNumberDelta (method, to) {\r\n    to = new SVGNumber(to)\r\n\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    var morpher = new Morphable(this._stepper).to(to)\r\n    var from = null\r\n    this.queue(function () {\r\n      from = this.element()[method]()\r\n      morpher.from(from)\r\n      morpher.to(from + to)\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    }, function (newTo) {\r\n      morpher.to(from + new SVGNumber(newTo))\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueObject (method, to) {\r\n    // Try to change the target if we have this method already registerd\r\n    if (this._tryRetarget(method, to)) return this\r\n\r\n    // Make a morpher and queue the animation\r\n    var morpher = new Morphable(this._stepper).to(to)\r\n    this.queue(function () {\r\n      morpher.from(this.element()[method]())\r\n    }, function (pos) {\r\n      this.element()[method](morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    // Register the morpher so that if it is changed again, we can retarget it\r\n    this._rememberMorpher(method, morpher)\r\n    return this\r\n  },\r\n\r\n  _queueNumber (method, value) {\r\n    return this._queueObject(method, new SVGNumber(value))\r\n  },\r\n\r\n  // Animatable center x-axis\r\n  cx (x) {\r\n    return this._queueNumber('cx', x)\r\n  },\r\n\r\n  // Animatable center y-axis\r\n  cy (y) {\r\n    return this._queueNumber('cy', y)\r\n  },\r\n\r\n  // Add animatable move\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  },\r\n\r\n  // Add animatable center\r\n  center (x, y) {\r\n    return this.cx(x).cy(y)\r\n  },\r\n\r\n  // Add animatable size\r\n  size (width, height) {\r\n    // animate bbox based size for all other elements\r\n    var box\r\n\r\n    if (!width || !height) {\r\n      box = this._element.bbox()\r\n    }\r\n\r\n    if (!width) {\r\n      width = box.width / box.height * height\r\n    }\r\n\r\n    if (!height) {\r\n      height = box.height / box.width * width\r\n    }\r\n\r\n    return this\r\n      .width(width)\r\n      .height(height)\r\n  },\r\n\r\n  // Add animatable width\r\n  width (width) {\r\n    return this._queueNumber('width', width)\r\n  },\r\n\r\n  // Add animatable height\r\n  height (height) {\r\n    return this._queueNumber('height', height)\r\n  },\r\n\r\n  // Add animatable plot\r\n  plot (a, b, c, d) {\r\n    // Lines can be plotted with 4 arguments\r\n    if (arguments.length === 4) {\r\n      return this.plot([ a, b, c, d ])\r\n    }\r\n\r\n    if (this._tryRetarget('plot', a)) return this\r\n\r\n    var morpher = new Morphable(this._stepper)\r\n      .type(this._element.MorphArray).to(a)\r\n\r\n    this.queue(function () {\r\n      morpher.from(this._element.array())\r\n    }, function (pos) {\r\n      this._element.plot(morpher.at(pos))\r\n      return morpher.done()\r\n    })\r\n\r\n    this._rememberMorpher('plot', morpher)\r\n    return this\r\n  },\r\n\r\n  // Add leading method\r\n  leading (value) {\r\n    return this._queueNumber('leading', value)\r\n  },\r\n\r\n  // Add animatable viewbox\r\n  viewbox (x, y, width, height) {\r\n    return this._queueObject('viewbox', new Box(x, y, width, height))\r\n  },\r\n\r\n  update (o) {\r\n    if (typeof o !== 'object') {\r\n      return this.update({\r\n        offset: arguments[0],\r\n        color: arguments[1],\r\n        opacity: arguments[2]\r\n      })\r\n    }\r\n\r\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\r\n    if (o.color != null) this.attr('stop-color', o.color)\r\n    if (o.offset != null) this.attr('offset', o.offset)\r\n\r\n    return this\r\n  }\r\n})\r\n\r\nextend(Runner, { rx, ry, from, to })\r\nregister(Runner, 'Runner')\r\n", "import {\r\n  adopt,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { ns, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Defs from './Defs.js'\r\nimport { globals } from '../utils/window.js'\r\n\r\nexport default class Svg extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('svg', node), node)\r\n    this.namespace()\r\n  }\r\n\r\n  isRoot () {\r\n    return !this.node.parentNode\r\n      || !(this.node.parentNode instanceof globals.window.SVGElement)\r\n      || this.node.parentNode.nodeName === '#document'\r\n  }\r\n\r\n  // Check if this is a root svg\r\n  // If not, call docs from this element\r\n  root () {\r\n    if (this.isRoot()) return this\r\n    return super.root()\r\n  }\r\n\r\n  // Add namespaces\r\n  namespace () {\r\n    if (!this.isRoot()) return this.root().namespace()\r\n    return this\r\n      .attr({ xmlns: ns, version: '1.1' })\r\n      .attr('xmlns:xlink', xlink, xmlns)\r\n      .attr('xmlns:svgjs', svgjs, xmlns)\r\n  }\r\n\r\n  // Creates and returns defs element\r\n  defs () {\r\n    if (!this.isRoot()) return this.root().defs()\r\n\r\n    return adopt(this.node.querySelector('defs'))\r\n      || this.put(new Defs())\r\n  }\r\n\r\n  // custom parent method\r\n  parent (type) {\r\n    if (this.isRoot()) {\r\n      return this.node.parentNode.nodeName === '#document'\r\n        ? null\r\n        : adopt(this.node.parentNode)\r\n    }\r\n\r\n    return super.parent(type)\r\n  }\r\n\r\n  clear () {\r\n    // remove children\r\n    while (this.node.hasChildNodes()) {\r\n      this.node.removeChild(this.node.lastChild)\r\n    }\r\n\r\n    // remove defs reference\r\n    delete this._defs\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create nested svg document\r\n    nested: wrapWithAttrCheck(function () {\r\n      return this.put(new Svg())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Svg, 'Svg', true)\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class Symbol extends Container {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('symbol', node), node)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    symbol: wrapWithAttrCheck(function () {\r\n      return this.put(new Symbol())\r\n    })\r\n  }\r\n})\r\n\r\nregister(Symbol, 'Symbol')\r\n", "import { globals } from '../../utils/window.js'\r\n\r\n// Create plain text node\r\nexport function plain (text) {\r\n  // clear if build mode is disabled\r\n  if (this._build === false) {\r\n    this.clear()\r\n  }\r\n\r\n  // create text node\r\n  this.node.appendChild(globals.document.createTextNode(text))\r\n\r\n  return this\r\n}\r\n\r\n// Get length of text element\r\nexport function length () {\r\n  return this.node.getComputedTextLength()\r\n}\r\n", "import {\r\n  adopt,\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Shape from './Shape.js'\r\nimport { globals } from '../utils/window.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Text extends Shape {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('text', node), node)\r\n\r\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\r\n    this._rebuild = true // enable automatic updating of dy values\r\n    this._build = false // disable build mode for adding multiple lines\r\n  }\r\n\r\n  // Move over x-axis\r\n  // Text is moved its bounding box\r\n  // text-anchor does NOT matter\r\n  x (x, box = this.bbox()) {\r\n    if (x == null) {\r\n      return box.x\r\n    }\r\n\r\n    return this.attr('x', this.attr('x') + x - box.x)\r\n  }\r\n\r\n  // Move over y-axis\r\n  y (y, box = this.bbox()) {\r\n    if (y == null) {\r\n      return box.y\r\n    }\r\n\r\n    return this.attr('y', this.attr('y') + y - box.y)\r\n  }\r\n\r\n  move (x, y, box = this.bbox()) {\r\n    return this.x(x, box).y(y, box)\r\n  }\r\n\r\n  // Move center over x-axis\r\n  cx (x, box = this.bbox()) {\r\n    if (x == null) {\r\n      return box.cx\r\n    }\r\n\r\n    return this.attr('x', this.attr('x') + x - box.cx)\r\n  }\r\n\r\n  // Move center over y-axis\r\n  cy (y, box = this.bbox()) {\r\n    if (y == null) {\r\n      return box.cy\r\n    }\r\n\r\n    return this.attr('y', this.attr('y') + y - box.cy)\r\n  }\r\n\r\n  center (x, y, box = this.bbox()) {\r\n    return this.cx(x, box).cy(y, box)\r\n  }\r\n\r\n  // Set the text content\r\n  text (text) {\r\n    // act as getter\r\n    if (text === undefined) {\r\n      var children = this.node.childNodes\r\n      var firstLine = 0\r\n      text = ''\r\n\r\n      for (var i = 0, len = children.length; i < len; ++i) {\r\n        // skip textPaths - they are no lines\r\n        if (children[i].nodeName === 'textPath') {\r\n          if (i === 0) firstLine = 1\r\n          continue\r\n        }\r\n\r\n        // add newline if its not the first child and newLined is set to true\r\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\r\n          text += '\\n'\r\n        }\r\n\r\n        // add content of this node\r\n        text += children[i].textContent\r\n      }\r\n\r\n      return text\r\n    }\r\n\r\n    // remove existing content\r\n    this.clear().build(true)\r\n\r\n    if (typeof text === 'function') {\r\n      // call block\r\n      text.call(this, this)\r\n    } else {\r\n      // store text and make sure text is not blank\r\n      text = text.split('\\n')\r\n\r\n      // build new lines\r\n      for (var j = 0, jl = text.length; j < jl; j++) {\r\n        this.tspan(text[j]).newLine()\r\n      }\r\n    }\r\n\r\n    // disable build mode and rebuild lines\r\n    return this.build(false).rebuild()\r\n  }\r\n\r\n  // Set / get leading\r\n  leading (value) {\r\n    // act as getter\r\n    if (value == null) {\r\n      return this.dom.leading\r\n    }\r\n\r\n    // act as setter\r\n    this.dom.leading = new SVGNumber(value)\r\n\r\n    return this.rebuild()\r\n  }\r\n\r\n  // Rebuild appearance type\r\n  rebuild (rebuild) {\r\n    // store new rebuild flag if given\r\n    if (typeof rebuild === 'boolean') {\r\n      this._rebuild = rebuild\r\n    }\r\n\r\n    // define position of all lines\r\n    if (this._rebuild) {\r\n      var self = this\r\n      var blankLineOffset = 0\r\n      var leading = this.dom.leading\r\n\r\n      this.each(function () {\r\n        var fontSize = globals.window.getComputedStyle(this.node)\r\n          .getPropertyValue('font-size')\r\n        var dy = leading * new SVGNumber(fontSize)\r\n\r\n        if (this.dom.newLined) {\r\n          this.attr('x', self.attr('x'))\r\n\r\n          if (this.text() === '\\n') {\r\n            blankLineOffset += dy\r\n          } else {\r\n            this.attr('dy', dy + blankLineOffset)\r\n            blankLineOffset = 0\r\n          }\r\n        }\r\n      })\r\n\r\n      this.fire('rebuild')\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // Enable / disable build mode\r\n  build (build) {\r\n    this._build = !!build\r\n    return this\r\n  }\r\n\r\n  // overwrite method from parent to set data properly\r\n  setData (o) {\r\n    this.dom = o\r\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\r\n    return this\r\n  }\r\n}\r\n\r\nextend(Text, textable)\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create text element\r\n    text: wrapWithAttrCheck(function (text) {\r\n      return this.put(new Text()).text(text)\r\n    }),\r\n\r\n    // Create plain text element\r\n    plain: wrapWithAttrCheck(function (text) {\r\n      return this.put(new Text()).plain(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Text, 'Text')\r\n", "import {\r\n  extend,\r\n  nodeOrNew,\r\n  register,\r\n  wrapWithAttrCheck\r\n} from '../utils/adopter.js'\r\nimport { globals } from '../utils/window.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport SVGNumber from '../types/SVGNumber.js'\r\nimport Text from './Text.js'\r\nimport * as textable from '../modules/core/textable.js'\r\n\r\nexport default class Tspan extends Text {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('tspan', node), node)\r\n  }\r\n\r\n  // Set text content\r\n  text (text) {\r\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\r\n\r\n    typeof text === 'function' ? text.call(this, this) : this.plain(text)\r\n\r\n    return this\r\n  }\r\n\r\n  // Shortcut dx\r\n  dx (dx) {\r\n    return this.attr('dx', dx)\r\n  }\r\n\r\n  // Shortcut dy\r\n  dy (dy) {\r\n    return this.attr('dy', dy)\r\n  }\r\n\r\n  x (x) {\r\n    return this.attr('x', x)\r\n  }\r\n\r\n  y (y) {\r\n    return this.attr('x', y)\r\n  }\r\n\r\n  move (x, y) {\r\n    return this.x(x).y(y)\r\n  }\r\n\r\n  // Create new line\r\n  newLine () {\r\n    // fetch text parent\r\n    var t = this.parent(Text)\r\n\r\n    // mark new line\r\n    this.dom.newLined = true\r\n\r\n    var fontSize = globals.window.getComputedStyle(this.node)\r\n      .getPropertyValue('font-size')\r\n    var dy = t.dom.leading * new SVGNumber(fontSize)\r\n\r\n    // apply new position\r\n    return this.dy(dy).attr('x', t.x())\r\n  }\r\n}\r\n\r\nextend(Tspan, textable)\r\n\r\nregisterMethods({\r\n  Tspan: {\r\n    tspan: wrapWithAttrCheck(function (text) {\r\n      var tspan = new Tspan()\r\n\r\n      // clear if build mode is disabled\r\n      if (!this._build) {\r\n        this.clear()\r\n      }\r\n\r\n      // add new tspan\r\n      this.node.appendChild(tspan.node)\r\n\r\n      return tspan.text(text)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Tspan, 'Tspan')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class ClipPath extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('clipPath', node), node)\r\n  }\r\n\r\n  // Unclip all clipped elements and remove itself\r\n  remove () {\r\n    // unclip all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unclip()\r\n    })\r\n\r\n    // remove clipPath from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [clip-path*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create clipping element\r\n    clip: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new ClipPath())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute clipPath to svg element\r\n    clipWith (element) {\r\n      // use given clip or create a new one\r\n      const clipper = element instanceof ClipPath\r\n        ? element\r\n        : this.parent().clip().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('clip-path', 'url(\"#' + clipper.id() + '\")')\r\n    },\r\n\r\n    // Unclip element\r\n    unclip () {\r\n      return this.attr('clip-path', null)\r\n    },\r\n\r\n    clipper () {\r\n      return this.reference('clip-path')\r\n    }\r\n  }\r\n})\r\n\r\nregister(ClipPath, 'ClipPath')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Element from './Element.js'\r\n\r\nexport default class ForeignObject extends Element {\r\n  constructor (node) {\r\n    super(nodeOrNew('foreignObject', node), node)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    foreignObject: wrapWithAttrCheck(function (width, height) {\r\n      return this.put(new ForeignObject()).size(width, height)\r\n    })\r\n  }\r\n})\r\n\r\nregister(ForeignObject, 'ForeignObject')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { proportionalSize } from '../utils/utils.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport Matrix from '../types/Matrix.js'\r\nimport Point from '../types/Point.js'\r\n\r\nexport default class G extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('g', node), node)\r\n  }\r\n\r\n  x (x, box = this.bbox()) {\r\n    if (x == null) return box.x\r\n    return this.move(x, box.y, box)\r\n  }\r\n\r\n  y (y, box = this.bbox()) {\r\n    if (y == null) return box.y\r\n    return this.move(box.x, y, box)\r\n  }\r\n\r\n  move (x = 0, y = 0, box = this.bbox()) {\r\n    const dx = x - box.x\r\n    const dy = y - box.y\r\n\r\n    return this.dmove(dx, dy)\r\n  }\r\n\r\n  dx (dx) {\r\n    return this.dmove(dx, 0)\r\n  }\r\n\r\n  dy (dy) {\r\n    return this.dmove(0, dy)\r\n  }\r\n\r\n  dmove (dx, dy) {\r\n    this.children().forEach((child, i) => {\r\n      // Get the childs bbox\r\n      const bbox = child.bbox()\r\n      // Get childs matrix\r\n      const m = new Matrix(child)\r\n      // Translate childs matrix by amount and\r\n      // transform it back into parents space\r\n      const matrix = m.translate(dx, dy).transform(m.inverse())\r\n      // Calculate new x and y from old box\r\n      const p = new Point(bbox.x, bbox.y).transform(matrix)\r\n      // Move element\r\n      child.move(p.x, p.y)\r\n    })\r\n\r\n    return this\r\n  }\r\n\r\n  width (width, box = this.bbox()) {\r\n    if (width == null) return box.width\r\n    return this.size(width, box.height, box)\r\n  }\r\n\r\n  height (height, box = this.bbox()) {\r\n    if (height == null) return box.height\r\n    return this.size(box.width, height, box)\r\n  }\r\n\r\n  size (width, height, box = this.bbox()) {\r\n    const p = proportionalSize(this, width, height, box)\r\n    const scaleX = p.width / box.width\r\n    const scaleY = p.height / box.height\r\n\r\n    this.children().forEach((child, i) => {\r\n      const o = new Point(box).transform(new Matrix(child).inverse())\r\n      child.scale(scaleX, scaleY, o.x, o.y)\r\n    })\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a group element\r\n    group: wrapWithAttrCheck(function () {\r\n      return this.put(new G())\r\n    })\r\n  }\r\n})\r\n\r\nregister(G, 'G')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Container from './Container.js'\r\n\r\nexport default class A extends Container {\r\n  constructor (node) {\r\n    super(nodeOrNew('a', node), node)\r\n  }\r\n\r\n  // Link url\r\n  to (url) {\r\n    return this.attr('href', url, xlink)\r\n  }\r\n\r\n  // Link target attribute\r\n  target (target) {\r\n    return this.attr('target', target)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a hyperlink element\r\n    link: wrapWithAttrCheck(function (url) {\r\n      return this.put(new A()).to(url)\r\n    })\r\n  },\r\n  Element: {\r\n    // Create a hyperlink element\r\n    linkTo: function (url) {\r\n      var link = new A()\r\n\r\n      if (typeof url === 'function') {\r\n        url.call(link, link)\r\n      } else {\r\n        link.to(url)\r\n      }\r\n\r\n      return this.parent().put(link).put(this)\r\n    }\r\n  }\r\n})\r\n\r\nregister(A, 'A')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport Container from './Container.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class Mask extends Container {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('mask', node), node)\r\n  }\r\n\r\n  // Unmask all masked elements and remove itself\r\n  remove () {\r\n    // unmask all targets\r\n    this.targets().forEach(function (el) {\r\n      el.unmask()\r\n    })\r\n\r\n    // remove mask from parent\r\n    return super.remove()\r\n  }\r\n\r\n  targets () {\r\n    return baseFind('svg [mask*=\"' + this.id() + '\"]')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    mask: wrapWithAttrCheck(function () {\r\n      return this.defs().put(new Mask())\r\n    })\r\n  },\r\n  Element: {\r\n    // Distribute mask to svg element\r\n    maskWith (element) {\r\n      // use given mask or create a new one\r\n      var masker = element instanceof Mask\r\n        ? element\r\n        : this.parent().mask().add(element)\r\n\r\n      // apply mask\r\n      return this.attr('mask', 'url(\"#' + masker.id() + '\")')\r\n    },\r\n\r\n    // Unmask element\r\n    unmask () {\r\n      return this.attr('mask', null)\r\n    },\r\n\r\n    masker () {\r\n      return this.reference('mask')\r\n    }\r\n  }\r\n})\r\n\r\nregister(Mask, 'Mask')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { unCamelCase } from '../utils/utils.js'\r\nimport Element from './Element.js'\r\n\r\nfunction cssRule (selector, rule) {\r\n  if (!selector) return ''\r\n  if (!rule) return selector\r\n\r\n  var ret = selector + '{'\r\n\r\n  for (var i in rule) {\r\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\r\n  }\r\n\r\n  ret += '}'\r\n\r\n  return ret\r\n}\r\n\r\nexport default class Style extends Element {\r\n  constructor (node) {\r\n    super(nodeOrNew('style', node), node)\r\n  }\r\n\r\n  addText (w = '') {\r\n    this.node.textContent += w\r\n    return this\r\n  }\r\n\r\n  font (name, src, params = {}) {\r\n    return this.rule('@font-face', {\r\n      fontFamily: name,\r\n      src: src,\r\n      ...params\r\n    })\r\n  }\r\n\r\n  rule (selector, obj) {\r\n    return this.addText(cssRule(selector, obj))\r\n  }\r\n}\r\n\r\nregisterMethods('Dom', {\r\n  style: wrapWithAttrCheck(function (selector, obj) {\r\n    return this.put(new Style()).rule(selector, obj)\r\n  }),\r\n  fontface: wrapWithAttrCheck(function (name, src, params) {\r\n    return this.put(new Style()).font(name, src, params)\r\n  })\r\n})\r\n\r\nregister(Style, 'Style')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Path from './Path.js'\r\nimport PathArray from '../types/PathArray.js'\r\nimport Text from './Text.js'\r\nimport baseFind from '../modules/core/selector.js'\r\n\r\nexport default class TextPath extends Text {\r\n  // Initialize node\r\n  constructor (node) {\r\n    super(nodeOrNew('textPath', node), node)\r\n  }\r\n\r\n  // return the array of the path track element\r\n  array () {\r\n    var track = this.track()\r\n\r\n    return track ? track.array() : null\r\n  }\r\n\r\n  // Plot path if any\r\n  plot (d) {\r\n    var track = this.track()\r\n    var pathArray = null\r\n\r\n    if (track) {\r\n      pathArray = track.plot(d)\r\n    }\r\n\r\n    return (d == null) ? pathArray : this\r\n  }\r\n\r\n  // Get the path element\r\n  track () {\r\n    return this.reference('href')\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    textPath: wrapWithAttrCheck(function (text, path) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = this.text(text)\r\n      }\r\n\r\n      return text.path(path)\r\n    })\r\n  },\r\n  Text: {\r\n    // Create path for text to run on\r\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\r\n      var textPath = new TextPath()\r\n\r\n      // if track is a path, reuse it\r\n      if (!(track instanceof Path)) {\r\n        // create path element\r\n        track = this.defs().path(track)\r\n      }\r\n\r\n      // link textPath to path and add content\r\n      textPath.attr('href', '#' + track, xlink)\r\n\r\n      // Transplant all nodes from text to textPath\r\n      let node\r\n      if (importNodes) {\r\n        while ((node = this.node.firstChild)) {\r\n          textPath.node.appendChild(node)\r\n        }\r\n      }\r\n\r\n      // add textPath element as child node and return textPath\r\n      return this.put(textPath)\r\n    }),\r\n\r\n    // Get the textPath children\r\n    textPath () {\r\n      return this.findOne('textPath')\r\n    }\r\n  },\r\n  Path: {\r\n    // creates a textPath from this path\r\n    text: wrapWithAttrCheck(function (text) {\r\n      // Convert text to instance if needed\r\n      if (!(text instanceof Text)) {\r\n        text = new Text().addTo(this.parent()).text(text)\r\n      }\r\n\r\n      // Create textPath from text and path and return\r\n      return text.path(this)\r\n    }),\r\n\r\n    targets () {\r\n      return baseFind('svg [href*=\"' + this.id() + '\"]')\r\n    }\r\n  }\r\n})\r\n\r\nTextPath.prototype.MorphArray = PathArray\r\nregister(TextPath, 'TextPath')\r\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\r\nimport { registerMethods } from '../utils/methods.js'\r\nimport { xlink } from '../modules/core/namespaces.js'\r\nimport Shape from './Shape.js'\r\n\r\nexport default class Use extends Shape {\r\n  constructor (node) {\r\n    super(nodeOrNew('use', node), node)\r\n  }\r\n\r\n  // Use element as a reference\r\n  element (element, file) {\r\n    // Set lined element\r\n    return this.attr('href', (file || '') + '#' + element, xlink)\r\n  }\r\n}\r\n\r\nregisterMethods({\r\n  Container: {\r\n    // Create a use element\r\n    use: wrapWithAttrCheck(function (element, file) {\r\n      return this.put(new Use()).element(element, file)\r\n    })\r\n  }\r\n})\r\n\r\nregister(Use, 'Use')\r\n", "/* Optional Modules */\r\nimport './modules/optional/arrange.js'\r\nimport './modules/optional/class.js'\r\nimport './modules/optional/css.js'\r\nimport './modules/optional/data.js'\r\nimport './modules/optional/memory.js'\r\nimport './modules/optional/sugar.js'\r\nimport './modules/optional/transform.js'\r\n\r\nimport { extend, makeInstance } from './utils/adopter.js'\r\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\r\nimport Box from './types/Box.js'\r\nimport Circle from './elements/Circle.js'\r\nimport Color from './types/Color.js'\r\nimport Container from './elements/Container.js'\r\nimport Defs from './elements/Defs.js'\r\nimport Dom from './elements/Dom.js'\r\nimport Element from './elements/Element.js'\r\nimport Ellipse from './elements/Ellipse.js'\r\nimport EventTarget from './types/EventTarget.js'\r\nimport Gradient from './elements/Gradient.js'\r\nimport Image from './elements/Image.js'\r\nimport Line from './elements/Line.js'\r\nimport List from './types/List.js'\r\nimport Marker from './elements/Marker.js'\r\nimport Matrix from './types/Matrix.js'\r\nimport Morphable, {\r\n  NonMorphable,\r\n  ObjectBag,\r\n  TransformBag,\r\n  makeMorphable,\r\n  registerMorphableType\r\n} from './animation/Morphable.js'\r\nimport Path from './elements/Path.js'\r\nimport PathArray from './types/PathArray.js'\r\nimport Pattern from './elements/Pattern.js'\r\nimport PointArray from './types/PointArray.js'\r\nimport Polygon from './elements/Polygon.js'\r\nimport Polyline from './elements/Polyline.js'\r\nimport Rect from './elements/Rect.js'\r\nimport Runner from './animation/Runner.js'\r\nimport SVGArray from './types/SVGArray.js'\r\nimport SVGNumber from './types/SVGNumber.js'\r\nimport Shape from './elements/Shape.js'\r\nimport Svg from './elements/Svg.js'\r\nimport Symbol from './elements/Symbol.js'\r\nimport Text from './elements/Text.js'\r\nimport Tspan from './elements/Tspan.js'\r\nimport * as defaults from './modules/core/defaults.js'\r\nimport * as utils from './utils/utils.js'\r\nimport * as namespaces from './modules/core/namespaces.js'\r\nimport * as regex from './modules/core/regex.js'\r\n\r\nexport {\r\n  Morphable,\r\n  registerMorphableType,\r\n  makeMorphable,\r\n  TransformBag,\r\n  ObjectBag,\r\n  NonMorphable\r\n}\r\n\r\nexport { defaults, utils, namespaces, regex }\r\nexport const SVG = makeInstance\r\nexport { default as parser } from './modules/core/parser.js'\r\nexport { default as find } from './modules/core/selector.js'\r\nexport * from './modules/core/event.js'\r\nexport * from './utils/adopter.js'\r\nexport { registerWindow } from './utils/window.js'\r\n\r\n/* Animation Modules */\r\nexport { default as Animator } from './animation/Animator.js'\r\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\r\nexport { default as Queue } from './animation/Queue.js'\r\nexport { default as Runner } from './animation/Runner.js'\r\nexport { default as Timeline } from './animation/Timeline.js'\r\n\r\n/* Types */\r\nexport { default as Array } from './types/SVGArray.js'\r\nexport { default as Box } from './types/Box.js'\r\nexport { default as Color } from './types/Color.js'\r\nexport { default as EventTarget } from './types/EventTarget.js'\r\nexport { default as Matrix } from './types/Matrix.js'\r\nexport { default as Number } from './types/SVGNumber.js'\r\nexport { default as PathArray } from './types/PathArray.js'\r\nexport { default as Point } from './types/Point.js'\r\nexport { default as PointArray } from './types/PointArray.js'\r\nexport { default as List } from './types/List.js'\r\n\r\n/* Elements */\r\nexport { default as Circle } from './elements/Circle.js'\r\nexport { default as ClipPath } from './elements/ClipPath.js'\r\nexport { default as Container } from './elements/Container.js'\r\nexport { default as Defs } from './elements/Defs.js'\r\nexport { default as Dom } from './elements/Dom.js'\r\nexport { default as Element } from './elements/Element.js'\r\nexport { default as Ellipse } from './elements/Ellipse.js'\r\nexport { default as ForeignObject } from './elements/ForeignObject.js'\r\nexport { default as Gradient } from './elements/Gradient.js'\r\nexport { default as G } from './elements/G.js'\r\nexport { default as A } from './elements/A.js'\r\nexport { default as Image } from './elements/Image.js'\r\nexport { default as Line } from './elements/Line.js'\r\nexport { default as Marker } from './elements/Marker.js'\r\nexport { default as Mask } from './elements/Mask.js'\r\nexport { default as Path } from './elements/Path.js'\r\nexport { default as Pattern } from './elements/Pattern.js'\r\nexport { default as Polygon } from './elements/Polygon.js'\r\nexport { default as Polyline } from './elements/Polyline.js'\r\nexport { default as Rect } from './elements/Rect.js'\r\nexport { default as Shape } from './elements/Shape.js'\r\nexport { default as Stop } from './elements/Stop.js'\r\nexport { default as Style } from './elements/Style.js'\r\nexport { default as Svg } from './elements/Svg.js'\r\nexport { default as Symbol } from './elements/Symbol.js'\r\nexport { default as Text } from './elements/Text.js'\r\nexport { default as TextPath } from './elements/TextPath.js'\r\nexport { default as Tspan } from './elements/Tspan.js'\r\nexport { default as Use } from './elements/Use.js'\r\n\r\nextend([\r\n  Svg,\r\n  Symbol,\r\n  Image,\r\n  Pattern,\r\n  Marker\r\n], getMethodsFor('viewbox'))\r\n\r\nextend([\r\n  Line,\r\n  Polyline,\r\n  Polygon,\r\n  Path\r\n], getMethodsFor('marker'))\r\n\r\nextend(Text, getMethodsFor('Text'))\r\nextend(Path, getMethodsFor('Path'))\r\n\r\nextend(Defs, getMethodsFor('Defs'))\r\n\r\nextend([\r\n  Text,\r\n  Tspan\r\n], getMethodsFor('Tspan'))\r\n\r\nextend([\r\n  Rect,\r\n  Ellipse,\r\n  Circle,\r\n  Gradient\r\n], getMethodsFor('radius'))\r\n\r\nextend(EventTarget, getMethodsFor('EventTarget'))\r\nextend(Dom, getMethodsFor('Dom'))\r\nextend(Element, getMethodsFor('Element'))\r\nextend(Shape, getMethodsFor('Shape'))\r\n// extend(Element, getConstructor('Memory'))\r\nextend(Container, getMethodsFor('Container'))\r\n\r\nextend(Runner, getMethodsFor('Runner'))\r\n\r\nList.extend(getMethodNames())\r\n\r\nregisterMorphableType([\r\n  SVGNumber,\r\n  Color,\r\n  Box,\r\n  Matrix,\r\n  SVGArray,\r\n  PointArray,\r\n  PathArray\r\n])\r\n\r\nmakeMorphable()\r\n"],
  "mappings": "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",
  "names": []
}
